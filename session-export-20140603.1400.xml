<schedule created="2014-06-03T17:36:40.253102"><day date="2014-07-21"><entry id="1"><category></category><audience></audience><topics></topics><start>0930</start><duration>30</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Breakfast</title><description></description><speakers></speakers></entry><entry id="37"><category></category><audience></audience><topics></topics><start>1030</start><duration>30</duration><room id="1">C01</room><title>Welcome</title><description></description><speakers></speakers></entry><entry id="118"><category>Keynote</category><audience>Novice</audience><topics></topics><start>1100</start><duration>45</duration><room id="1">C01</room><title>One of Snowden, what's next?</title><description>Since June 2013, disclosed by Edward Snowden, we learn more and more facts about American and British spies&#8217; deep appetite for information, economic spying and the methods they use to collect data. They systematically tapped international communications on a scale that only few people could imagine. But what are the consequences for societies when they now know about the NSA metadata repository capable of taking in billions of "events" daily to collected and analyze? Is there a way to defend against an agency with a monstrous secret budget?</description><speakers><speaker id="1332"><name>Constanze Kurz</name><profile>https://ep2014.europython.eu/en/accounts/profile/1332/</profile><description>Constanze Kurz works at the University of Applied Sciences in Berlin as a computer scientist. She is the spokeswoman of the German Chaos Computer Club, Europe&#8217;s largest hacker group. She is an expert on surveillance techniques and co-author of technical analyses on voting computers, data retention and anti-terror laws for the German Constitutional Court.</description><image>https://ep2014.europython.eu/site_media/avatars/xWbxpPTjVcg.jpg</image></speaker></speakers></entry><entry id="121"><category>Keynote</category><audience>Novice</audience><topics></topics><start>1145</start><duration>45</duration><room id="1">C01</room><title>What can python learn from Haskell?</title><description>What can we learn from Erlang or Haskell for building reliable high&#13;
concurrency services? Bob was involved in many Python projects but&#13;
argues that for some domains there may be better methods found&#13;
elsewhere. He started looking for alternatives back in 2006 when&#13;
building high concurrency services at Mochi Media (originally with&#13;
Twisted), which led him to the land of Erlang and later Haskell. Bob is&#13;
going to talk about what he learned along the way. In particular, he&#8217;ll&#13;
cover some techniques that are used in functional programming languages&#13;
and how they can be used to solve problems in more performant, robust&#13;
and/or concise ways than the standard practices in Python. He is also&#13;
going to discuss some potential ways that the Python language and its&#13;
library ecosystem could evolve accordingly.</description><speakers><speaker id="1331"><name>Bob Ippolito</name><profile>https://ep2014.europython.eu/en/accounts/profile/1331/</profile><description>Bob Ippolito is an entrepreneur and polyglot open source developer from San Francisco, CA. His open source contributions include the json library for Python, the MochiKit framework for Javascript, and the mochiweb web server for Erlang. He&#8217;s founder and former CTO of Mochi Media, Inc. and currently dedicates his time to advising startups and working with non-profits such as Mission Bit and The College Initiative as a volunteer educator.</description><image>https://ep2014.europython.eu/site_media/avatars/bob_ippolito.jpg</image></speaker></speakers></entry><entry id="6"><category></category><audience></audience><topics></topics><start>1230</start><duration>90</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Lunch</title><description></description><speakers></speakers></entry><entry id="11"><category></category><audience></audience><topics></topics><start>1400</start><duration>45</duration><room id="1">C01</room><title>pymove3D Winner Announcement</title><description>The pymove3D competition was running until May 1st, 2014 (http://pymove3d.pysv.org). In this session, the winners will be announced.</description><speakers></speakers></entry><entry id="93"><category>Training</category><audience>Advanced</audience><topics><topic>System Administration</topic></topics><start>1400</start><duration>180</duration><room id="7">A05/A06</room><title>Deploying and managing FreeBSD jails with mr.awsome, fabric and ansible</title><description>FreeBSD jails provide a light-weight but powerful and secure way to virtualise services. The combination of mr.awsome (provisioning), ansible (declarative configuration) and Fabric (imperative configuration and maintenance) allow you to manage them elegantly, combining the best of each approach.</description><speakers><speaker id="387"><name>Tom Lazar</name><profile>https://ep2014.europython.eu/en/accounts/profile/387/</profile><description></description><image></image></speaker></speakers></entry><entry id="46"><category>Training</category><audience>Novice</audience><topics></topics><start>1400</start><duration>180</duration><room id="6">A03/A04</room><title>An intro to Blender modeling and scripting </title><description>Blender&#8217;s basics  *120 minutes*&#13;
-----------------&#13;
3D modeling tools, materials and textures, lighting and camera management. &#13;
&#13;
Going deeper *60 minutes*&#13;
---------------&#13;
Physics simulation! Smoke, fluids, particles, rigid and soft bodies will all be under your control.</description><speakers><speaker id="110"><name>Federico Frenguelli</name><profile>https://ep2014.europython.eu/en/accounts/profile/110/</profile><description>None is better than Null</description><image>https://ep2014.europython.eu/site_media/avatars/gravatar_1.jpeg</image></speaker></speakers></entry><entry id="12"><category></category><audience></audience><topics></topics><start>1445</start><duration>45</duration><room id="1">C01</room><title>Lightning Talks</title><description>A lightning talk is a short talk, typically only five minutes in duration, providing an opportunity for participants - particularly people not featured in the main programme - to deliver a presentation on a subject of their choosing. Speakers need to sign up before the session on the conference website.</description><speakers></speakers></entry><entry id="13"><category></category><audience></audience><topics></topics><start>1530</start><duration>30</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Coffee Break</title><description></description><speakers></speakers></entry><entry id="67"><category></category><audience></audience><topics></topics><start>1600</start><duration>60</duration><room id="1">C01</room><title>Recruiting Session</title><description></description><speakers></speakers></entry><entry id="62"><category></category><audience></audience><topics></topics><start>1700</start><duration>120</duration><room>B05/B06, B07/B08, B09</room><title>Poster and Recruiting Session</title><description></description><speakers></speakers></entry><entry id="64"><category></category><audience></audience><topics></topics><start>1900</start><duration>120</duration><room>ALL</room><title>Sponsored Event: RhodeCode</title><description></description><speakers></speakers></entry></day><day date="2014-07-22"><entry id="122"><category>Keynote</category><audience>Novice</audience><topics></topics><start>0900</start><duration>45</duration><room id="1">C01</room><title>Our decentralized future</title><description>Pieter will talk about the urgent push towards a decentralized future.  As founder of the ZeroMQ community, he will explain the vision, design and reality of distributed software systems. He&#8217;ll explain his view on the community itself, also a highly decentralized &#8220;Living System&#8221;, as Hintjens calls it. Finally he&#8217;ll talk about edgenet, a model for a decentralized Internet. </description><speakers><speaker id="1329"><name>Pieter Hintjens</name><profile>https://ep2014.europython.eu/en/accounts/profile/1329/</profile><description>Pieter Hintjens is a writer, programmer and thinker who has spent decades building large software systems and on-line communities, which he describes as "Living Systems". He is an expert in distributed computing, having written many protocols and distributed software systems. He founded the ZeroMQ free software project in 2007, and in 2013 launched the edgenet project to build a fully secure, anonymous peer-to-peer Internet. He is the author of "ZeroMQ - Messaging for Many Applications" (O'Reilly), "Code Connected", and "Culture and Empire: Digital Revolution". His blog is at hintjens.com.</description><image>https://ep2014.europython.eu/site_media/avatars/pieter-hintjens.jpg</image></speaker></speakers></entry><entry id="14"><category>Talk</category><audience>Novice</audience><topics><topic>Best Practices</topic></topics><start>1000</start><duration>30</duration><room id="1">C01</room><title>Marconi - OpenStack Queuing and Notification Service</title><description>Marconi is a multi-tenant cloud queuing system written in Python as part of the OpenStack project. &#13;
Marconi aims to ease the design of distributed systems and allow for asynchronous work distribution without creating yet another message broker.&#13;
This talk aims to give the audience a broad look at Marconi&#8217;s design and technologies used.&#13;
</description><speakers><speaker id="855"><name>Yeela Kaplan</name><profile>https://ep2014.europython.eu/en/accounts/profile/855/</profile><description>Software engineer at the cloud storage team in Red Hat.&#13;
Contributing to the oVirt and OpenStack projects.</description><image></image></speaker></speakers></entry><entry id="55"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1000</start><duration>30</duration><room id="2">B05/B06</room><title>Amanda: A New Generation of Distributed Services Framework</title><description>Abstract&#13;
=======&#13;
&#13;
To help create award winning visual effects, MPC developed a distributed service-oriented platform, Amanda.&#13;
Amanda allows developers of any level to write a service that is presented to users across 8 facilities globally without them requiring any&#13;
knowledge of building large concurrent systems. It allows artists and developers across different domains to work with&#13;
clearly defined API's and gives the service developer control over what and how data can and should be accessed.&#13;
&#13;
The talk will cover how to set up such a platform from the ground up. Starting at the service level building it out with&#13;
additional modules and technologies until the fully distributed system, including our monitoring and tracing approach&#13;
as well as the componetisation that allows swapping any of the modules in order to fine tune the&#13;
setup depending on the type of work being undertaken and changing business needs.</description><speakers><speaker id="373"><name>Jozef van Eenbergen</name><profile>https://ep2014.europython.eu/en/accounts/profile/373/</profile><description>Jozef has been working with Python since 2009 and programming with different languages since 2005. He is currently part of the Infrastructure team at MPC where he has been working as the principal developer on Amanda, MPC's distributed service framework which is used as the backbone of their international Visual Effects pipeline.&#13;
&#13;
When there is some free time Jozef enjoys trying out new tools and technologies and tries to stay on top of new developments as much possible.&#13;
&#13;
When he is not working Jozef's enjoys travelling, watching good movies, play the drums and work on CG/art projects as that is  what got him into the Visual Effects industry.&#13;
&#13;
He is currently based in London and lived in The Netherlands, France and Canada before that.</description><image>https://ep2014.europython.eu/site_media/avatars/oscar.jpg</image></speaker></speakers></entry><entry id="49"><category>Talk</category><audience>Novice</audience><topics><topic>Best Practices</topic></topics><start>1000</start><duration>30</duration><room id="3">B07/B08</room><title>Cutting-edge APIs using hypermedia at BSkyB</title><description>In the technology community at the moment there is a lot of talk about hypermedia enabled APIs and Web as an Architecture model.&#13;
 &#13;
 More and more applications nowadays try to adopt the loosely coupled and distributed web like architecture by using hypermedia as an engine of the application state.&#13;
 &#13;
In Sky we are successfully implementing this approach for some of our components, and we&#8217;ve learnt that the major benefit for us is the scalability that it offers: as an increasingly expanding business with a constantly growing product portfolio, scalability of all our systems is crucial.&#13;
 &#13;
In this talk I will share some of the things we learnt, I will explain what hypermedia enabled API means, I will give an example of such an API and I will take you through the implementation details and the usage of flask, dougrain and HAL in this context.&#13;
 &#13;
Also, I will present a brief comparison with an API that is not hypermedia enabled and take you through the advantages of using the first approach.</description><speakers><speaker id="224"><name>Adriana Vasiu</name><profile>https://ep2014.europython.eu/en/accounts/profile/224/</profile><description>I currently work as a Senior Software Developer for BskyB London and my programming skills vary. I am agnostic in terms of languages, even though my favourite one at the moment is Python.&#13;
&#13;
I work in an agile team which develops features across an entire sales platform and I've learned a lot from the very skilled and talented people that I have worked with at BSkyB, for more than two years now.&#13;
&#13;
Having in total more than 6 years experience, I always concentrate on continuous improvement of the software that I build, always adapting to the market, learning new things and improving my knowledge.&#13;
&#13;
Europython is an opportunity for me to share my enthusiasm and motivation towards building software applications in Python, and to expand my knowledge on the language. </description><image>https://ep2014.europython.eu/site_media/avatars/photo-1.JPG</image></speaker></speakers></entry><entry id="94"><category>Talk</category><audience>Advanced</audience><topics><topic>Gaming</topic></topics><start>1000</start><duration>30</duration><room id="5">A08</room><title>Mobile Games to the Cloud With Python</title><description>When a mobile game development company decides to switch to a more cloud based development it is faced with obstacles different from those it&#8217;s used to on mobile devices. This talk explains how Python provided us with most of the infrastructure for this task and how a Python game backend was built as a result.</description><speakers><speaker id="1103"><name>Mislav Stipeti</name><profile>https://ep2014.europython.eu/en/accounts/profile/1103/</profile><description></description><image></image></speaker></speakers></entry><entry id="73"><category>Training</category><audience>Novice</audience><topics></topics><start>1000</start><duration>180</duration><room id="6">A03/A04</room><title>Effective data visualisation in 2D with matplotlib</title><description># Preliminary schedule&#13;
&#13;
1) Introduction to matplotlib (30 min)&#13;
&#13;
- introduction to data visualisation&#13;
- basic plotting&#13;
- quick interactive data exploration&#13;
&#13;
2) Mapping data to graphical dimensions (60 min)&#13;
&#13;
- choosing visual encodings (position, length, colour etc.)&#13;
- effective use of colour&#13;
- data reduction methods (principal components, clustering etc.)&#13;
- basic mapping using basemap (optional, +15 min)&#13;
&#13;
3) Creating visual style (45 min)&#13;
&#13;
- matplotlib data model&#13;
- plot customisation&#13;
- building complex plot layouts combining data from different sources/dimensions (such as data dashboard or small multiplies)&#13;
&#13;
4) Building interactive plots (30 min)&#13;
&#13;
- embedding in applications&#13;
&#13;
Required software:&#13;
&#13;
- python 2.7 or 3.x&#13;
- ipython &gt;= 0.12 (recommended)&#13;
- matplotlib &gt;= 1.1.1&#13;
- matplotlib-basemap (optional)&#13;
- numpy &gt;= 1.6&#13;
&#13;
All of the libraries are available in standard Linux distributions or via pip command. On Windows and Mac one of scientific python distributions is recommended (such as [anaconda](https://store.continuum.io/cshop/anaconda/) or [Canopy](https://www.enthought.com/products/canopy/)).</description><speakers><speaker id="710"><name>Bartosz Telenczuk</name><profile>https://ep2014.europython.eu/en/accounts/profile/710/</profile><description>Bartosz Telenczuk has a PhD in biophysics. He has been active Python user since 2005. He is creator of [svgutils](https://github.com/btel/svg_utils) and he  has contributed to many open source Python libraries including numpy and matplotlib.  He is also a Python advocate and an instructor at [advanced Python schools for scientists](https://python.g-node.org/python-summerschool-2013/). Currently he is a researcher in France, developing methods to interpret the electrical activity of the brain.</description><image></image></speaker></speakers></entry><entry id="76"><category>Training</category><audience>Advanced</audience><topics></topics><start>1000</start><duration>180</duration><room id="7">A05/A06</room><title>Making your first contribution to OpenStack</title><description>Participants are expected to install DevStack in a Virtual Machine (doing it in a VM is important as DevStack cannot be uninstalled) prior to the training to save time and to avoid overloading the Internet connection on the day.&#13;
&#13;
There are many virtualisation software packages that let you create VMs, for example *virt-manager* (Linux), *Vagrant* (Linux, Windows, Mac Os X) or *Virtual Box* (Linux, Windows, Mac OS X). You should install Fedora 20 or Ubuntu 12.04 in the virtual machine.&#13;
The installation instructions for DevStack are available at [http://devstack.org](http://devstack.org) : within the VM, clone the repository then run `./stack.sh`.&#13;
&#13;
If you have a problem installing DevStack we can try and solve it during the day - doing one run-through of `stack.sh` will at least ensure all the packages and software have been downloaded (save the VM!).&#13;
&#13;
&#13;
Structure:&#13;
----------&#13;
**30 minutes - Introduction**&#13;
&#13;
  Introduction to OpenStack and to the session goals&#13;
&#13;
  Environment check, start devstack&#13;
&#13;
**30 minutes - Setting up**&#13;
&#13;
  Creating accounts:&#13;
&#13;
  - Launchpad (used for bug tracking)&#13;
  - The Foundation&#13;
  - Gerrit + CLA (it uses the launchpad account, explanation of how gerrit is used, review team vs committer team)&#13;
  - Key pair&#13;
&#13;
  Devstack tips&#13;
&#13;
**30 minutes - Getting started**&#13;
&#13;
  How to choose a bug, bug trackers, low hanging fruits&#13;
&#13;
  Reminder of the different OpenStack projects mentioned in the introduction, as well as the documentation and integration tests&#13;
&#13;
  Each participant should pick a project and download the code for that project&#13;
&#13;
  Ways to find an easy bug:&#13;
&#13;
  - low-hanging-fruit&#13;
  - general bug tracker browsing&#13;
  - adding a unit test&#13;
  - developer docs also live in the project's repository (typos, clarifications, etc)&#13;
&#13;
**10 minutes - Break**&#13;
&#13;
**45 minutes - Find &amp; work on a bug**&#13;
&#13;
  Participants work on a small task.&#13;
&#13;
  There'll be a few tasks ready for people who struggle to find something (missing tests, mostly) but it's unlikely there will be one ready in advance for everyone. Participants will be strongly encouraged to find a task of their own based on their interests and the advice shared prior to the break.&#13;
&#13;
**35 minutes - Submitting the patch**&#13;
&#13;
  Gerrit for review&#13;
&#13;
  The git-review tool&#13;
&#13;
   * setting up git-review&#13;
   * submitting the patch&#13;
   * how it can be used for reviewing&#13;
&#13;
  The next steps (for your patch, and the community)&#13;
</description><speakers><speaker id="377"><name>Julie Pichon</name><profile>https://ep2014.europython.eu/en/accounts/profile/377/</profile><description>Julie is a software engineer at Red Hat and works on Horizon, the web dashboard for OpenStack. A big open-source supporter, she likes to get involved in projects aiming to help newcomers get started contributing to open-source. </description><image></image></speaker></speakers></entry><entry id="2"><category></category><audience></audience><topics></topics><start>1030</start><duration>30</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Breakfast</title><description></description><speakers></speakers></entry><entry id="37"><category>Talk</category><audience>Advanced</audience><topics><topic>System Administration</topic></topics><start>1100</start><duration>45</duration><room id="3">B07/B08</room><title>Rethinking packaging, development and deployment</title><description>In Python, we're trying to solve packaging problems in our own domain, but maybe someone else already solved most our problems.&#13;
&#13;
In the talk I'll show how I develop and deploy Python projects that can be easily mixed with non-Python dependencies.&#13;
&#13;
http://nixos.org/nix/ will be demonstrated to replace technologies in our stack: pip, virtualenv, buildout, ansible, jenkins.</description><speakers><speaker id="182"><name>Domen Ko&#382;ar</name><profile>https://ep2014.europython.eu/en/accounts/profile/182/</profile><description>Electrical Engineering student dropout focusing on solving problems with Python / Nix / JavaScript / Linux stack using kanban workflow.&#13;
&#13;
4 times GSOC student (Gentoo, Plone, PylonsProject, PylonsProject).&#13;
&#13;
Beer lover and kite-surfer from Ljubljana, Slovenia.&#13;
&#13;
Proud member of Kiberpipa hackerspace.&#13;
&#13;
Vision: be paid to work on improving OSS infrastructure.</description><image>https://ep2014.europython.eu/site_media/avatars/domen.jpeg</image></speaker></speakers></entry><entry id="109"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1100</start><duration>45</duration><room id="2">B05/B06</room><title>Pythonista: A full-featured Python environment for iOS devices</title><description>The [Pythonista][1] app delivers a full-featured Python development experience on an iPad or an iPhone.  This introduction to the app will provide a rapid overview of the Pythonista user experience, features and Community Forum.  Then it will focus on a few source code examples of using the GPS to deliver real-time local weather, use the image library to manipulate images and convert documents, use the gyroscope to understand pitch, yaw, and roll, use Dropbox to backup and restore scripts, images, etc.&#13;
&#13;
[1]: http://omz-software.com/pythonista</description><speakers><speaker id="689"><name>Christian Clauss</name><profile>https://ep2014.europython.eu/en/accounts/profile/689/</profile><description>Avid Python developer</description><image>https://ep2014.europython.eu/site_media/avatars/ChristianClauss.jpg</image></speaker></speakers></entry><entry id="15"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1100</start><duration>45</duration><room id="1">C01</room><title>Systems Integration: The OpenStack success story</title><description>OpenStack is a huge, open-source cloud provider. One of the main tenets of OpenStack is the (Shared Nothing Architecture) to which all modules stick very closely. In order to do that, services within OpenStack have adopted different strategies to integrate themselves and share data without sacrificing performance nor moving away from SNA.&#13;
&#13;
This strategies are not applicable just to OpenStack but to any distributed system. Sharing data, regardless what that data is, is a must-have requirement of any successful cloud service.&#13;
&#13;
This talk will present some of the existing integration strategies that are applicable to cloud infrastructures and enterprise services. The talk will be based on the strategies that have helped OpenStack to be successful and most importantly, scalable.&#13;
</description><speakers><speaker id="54"><name>Flavio Percoco</name><profile>https://ep2014.europython.eu/en/accounts/profile/54/</profile><description>Flavio spends most of his time hacking on storage and messaging modules. He has both Italian and Venezuelan roots, and is currently based in Italy where he works remotely for Red Hat. Flavio is also an actively open-source contributor, part of Mongodb Masters group and a Rust language contributor.&#13;
&#13;
Prior to Red Hat, Flavio worked on Big Data oriented applications, search engines and message systems. He was also an active member of Gnome's a11y team where he contributed to Orca and created MouseTrap, a head-tracker application. Outside Red Hat Flavio likes to take pictures, swim, travel, hang around with family and friends and whatever seems interesting.</description><image>https://ep2014.europython.eu/site_media/avatars/Screen-Shot-2013-09-12-at-8.40.46-AM.png</image></speaker></speakers></entry><entry id="111"><category>Talk</category><audience>Advanced</audience><topics><topic>Web</topic></topics><start>1100</start><duration>45</duration><room id="5">A08</room><title>Designing NRT(NearRealTime) stream processing systems : Using python with Storm and Kafka.</title><description>The essence of near-real-time stream processing is to compute huge volumes of data as it is received. This talk will focus on creating a pipeline for collecting huge volumes of data using Kafka and processing for near-real time computations using Storm. </description><speakers><speaker id="99"><name>Konark Modi</name><profile>https://ep2014.europython.eu/en/accounts/profile/99/</profile><description>Working as an engineer with MakeMyTrip.com (Online travel company based out of India). Python comes as the default language for me for tasks of any length, breadth and depth be it DevOps, Automation, Distributed task processing, Data Analysis, BigData ecosystem.</description><image>https://ep2014.europython.eu/site_media/avatars/profile_pic-resized.jpg</image></speaker></speakers></entry><entry id="4"><category>Talk</category><audience>Novice</audience><topics><topic>Best Practices</topic></topics><start>1100</start><duration>45</duration><room id="4">B09</room><title>The Sorry State of SSL</title><description>Those web pages with shiny lock icons boasting that your data is safe because of &#8220;256 bit encryption&#8221;? They are lying. In times of mass surveillance and commercialized Internet crime you should know why that&#8217;s the case. This talk will give you an overview that will help you to assess your personal security more realistically and to make your applications as secure as possible against all odds. </description><speakers><speaker id="183"><name>Hynek Schlawack</name><profile>https://ep2014.europython.eu/en/accounts/profile/183/</profile><description></description><image>https://ep2014.europython.eu/site_media/avatars/avatar_hs.jpg</image></speaker></speakers></entry><entry id="20"><category>Talk</category><audience>Novice</audience><topics><topic>Web</topic></topics><start>1145</start><duration>45</duration><room id="4">B09</room><title>Web Scraping in Python 101</title><description>This talk is about web scraping in Python, why web scraping is useful and what Python libraries are available to help you. I will also look into proprietary alternatives and will discuss how they work and why they are not useful. I will show you different libraries used in web scraping and some example code so that you can choose your own personal favourite. I will also tell why writing your own scrapper in scrapy allows you to have more control over the scraping process.</description><speakers><speaker id="293"><name>Muhammad Yasoob Ullah Khalid</name><profile>https://ep2014.europython.eu/en/accounts/profile/293/</profile><description>Muhammad Yasoob Ullah Khalid is a Python programmer from Pakistan. He is currently doing his High school and is one of the youngest speakers at the conference. He runs a blog which is very popular among Pythonistas and also does a lot of open source work through GitHub. He is very keen of meeting new people and if you happen to bump into him then do not forget to say "hi".</description><image>https://ep2014.europython.eu/site_media/avatars/398613_3186099341321_780863633_n.jpg</image></speaker></speakers></entry><entry id="113"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1145</start><duration>45</duration><room id="3">B07/B08</room><title>Message-passing concurrency for Python</title><description>Concurrency and parallelism in Python are always hot topics. This talk will look the variety of forms of concurrency and parallelism. In particular this talk will give an overview of various forms of message-passing concurrency which have become popular in languages like Scala and Go. A Python library called python-csp which implements similar ideas in a Pythonic way will be introduced and we will look at how this style of programming can be used to avoid deadlocks, race hazards and "callback hell".</description><speakers><speaker id="213"><name>Sarah Mount</name><profile>https://ep2014.europython.eu/en/accounts/profile/213/</profile><description>Sarah Mount is a Senior Lecturer in Computer Science at the University of Wolverhampton, with particular interests in concurrency, parallelism and dynamic languages.</description><image>https://ep2014.europython.eu/site_media/avatars/selfc_large.jpg</image></speaker></speakers></entry><entry id="10"><category>Talk</category><audience>Advanced</audience><topics><topic>Python Core</topic></topics><start>1145</start><duration>45</duration><room id="2">B05/B06</room><title>The Cython Compiler for Python</title><description>The Cython compiler is the most widely used static compiler for Python. It is used to speed up Python code and to extend CPython with fast native extension modules that process huge amounts of data all around the world. This talk by one of the core developers gives an intro to using the compiler and an overview of its major features. </description><speakers><speaker id="240"><name>Stefan Behnel</name><profile>https://ep2014.europython.eu/en/accounts/profile/240/</profile><description>Stefan is an active member of the German speaking Python community and a major core developer of the widely used Open Source Python tools lxml and Cython. He works for the European ebook flatrate service Skoobe, and as a freelance Python trainer and consultant.&#13;
</description><image></image></speaker></speakers></entry><entry id="69"><category>Talk</category><audience>Advanced</audience><topics><topic>Python Core</topic></topics><start>1145</start><duration>45</duration><room id="5">A08</room><title>Extending Python, what is the best option for me?</title><description>Python is a great language, but there are occasions where we need access to low level operations or connect with some database driver written in C. With the FFI(Foreign function interface) we can connect Python with other languages like C, C++ and even the new Rust. There are some alternatives to achieve this goal, Native Extensions, Ctypes and CFFI.  I'll compare this three ways of extending Python.</description><speakers><speaker id="175"><name>Francisco Fern&#225;ndez Casta&#241;o</name><profile>https://ep2014.europython.eu/en/accounts/profile/175/</profile><description>I work as software engineer at biicode in Madrid, Python is my main programming language but I also program in other languages like Erlang, Haskell, Clojure... My main interests are distributed systems, functional programming and graph databases. </description><image>https://ep2014.europython.eu/site_media/avatars/foto.jpeg</image></speaker></speakers></entry><entry id="7"><category></category><audience></audience><topics></topics><start>1230</start><duration>90</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Lunch</title><description></description><speakers></speakers></entry><entry id="22"><category>Talk</category><audience>Novice</audience><topics><topic>System Administration</topic></topics><start>1400</start><duration>30</duration><room id="1">C01</room><title>Statistics 101 for System Administrators</title><description>Python allows every sysadmin to run  (and learn) basic statistics on system data, replacing sed, awk, bc and gnuplot with an unique, reusable and interactive framework.&#13;
&#13;
The talk is a case study where python allowed us to highlight some network performance points in minutes using itertools, scipy and matplotlib.&#13;
&#13;
The presentation includes code snippets and a brief plot discussion.&#13;
</description><speakers><speaker id="248"><name>Roberto Polli</name><profile>https://ep2014.europython.eu/en/accounts/profile/248/</profile><description>Roberto works at Babel, migrating big mail infrastructures to open solutions. Develops in Python, C and Java to foster communities around various FLOSS, trying to bring both social and IT innovation.&#13;
&#13;
He's a Red Hat Certified Engineer and Virtualization Administrator, but loves maintaining free software, including the caldav java library: caldav4j.&#13;
&#13;
A life ago he took a Math degree, and he's really proud of it.&#13;
</description><image>https://ep2014.europython.eu/site_media/avatars/rpolli_400.jpg</image></speaker></speakers></entry><entry id="95"><category>Talk</category><audience>Novice</audience><topics><topic>Education</topic></topics><start>1400</start><duration>30</duration><room id="2">B05/B06</room><title>Teaching Python</title><description>Using Python in bringing people closer to programming has been popular for a while. But what are the most effective ways to do so?  The OpenTechSchool reports.</description><speakers><speaker id="391"><name>Robert Lehmann</name><profile>https://ep2014.europython.eu/en/accounts/profile/391/</profile><description>Python hacker, terminal enthusiast, culturally curious, hobbyist runner, IT Systems Engineering student.</description><image>https://ep2014.europython.eu/site_media/avatars/gravatar400.png</image></speaker></speakers></entry><entry id="35"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1400</start><duration>30</duration><room id="4">B09</room><title>Jigna: a seamless Python-JS bridge to create rich HTML UIs for Python apps</title><description>Jigna aims to provide an easy way to create rich user interfaces for Python applications using web technologies like HTML, CSS and Javascript, as opposed to widget based toolkits like Qt/wx or native toolkits. It provides a seamless two-way data binding between the Python model and the HTML view by creating a Python-JS communication bridge. This ensures that the view is always live as it can automatically update itself when the model changes, and update the model when user actions take place on the UI. The Jigna view can be rendered in an in-process Qt widget or over the web in a browser.</description><speakers><speaker id="215"><name>Prashant Agrawal</name><profile>https://ep2014.europython.eu/en/accounts/profile/215/</profile><description>Prashant works as a software developer at Enthought India in Mumbai. He has been working on providing a nice way for creating rich user interfaces for Enthought's desktop and web applications. &#13;
&#13;
Prior to this, he had graduated from the Indian Institute of Technology Bombay majoring in Aerospace Engineering where his interest in software development grew more than in aerospace.</description><image>https://ep2014.europython.eu/site_media/avatars/prashant1.jpg</image></speaker></speakers></entry><entry id="39"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1400</start><duration>30</duration><room id="5">A08</room><title>Documenting your project with MkDocs.</title><description>[MkDocs](http://www.mkdocs.org) is a new tool for creating documentation from Markdown.&#13;
&#13;
The talk will cover:&#13;
&#13;
* How to write, theme and publish your documentation.&#13;
* The background and motivation for MkDocs.&#13;
* Choosing between MkDocs or Sphinx.</description><speakers><speaker id="189"><name>Tom Christie</name><profile>https://ep2014.europython.eu/en/accounts/profile/189/</profile><description>Web &amp; API engineer.&#13;
Author of Django REST framework.</description><image>https://ep2014.europython.eu/site_media/avatars/Photo_29-10-2013_11_46_31.jpg</image></speaker></speakers></entry><entry id="87"><category>Training</category><audience>Novice</audience><topics></topics><start>1400</start><duration>180</duration><room id="6">A03/A04</room><title>Einf&#252;hrung in Sphinx</title><description>* Erstellung und Konfiguration einer neuen Dokumentation (20min)&#13;
* Einf&#252;hrung in reStructuredText (20min)&#13;
* Aufbau und Gliederung einer Dokumentation (20min)&#13;
* Kurze Pause (5min)&#13;
* Dokumentation von Python, C, C++, Javascript (40min)&#13;
* Automatische Dokumentation (20min)&#13;
* Kurze Pause (5min)&#13;
* Tabellen, Abbildungen, Formeln (20min)&#13;
* Glossar, Index, Referenzen (20min)&#13;
* &#220;berblick &#252;ber Erweiterungen (10min)</description><speakers><speaker id="180"><name>Jan Ulrich Hasecke</name><profile>https://ep2014.europython.eu/en/accounts/profile/180/</profile><description>Jan Ulrich Hasecke is a professional writer. He works as an advertising consultant for small and medium enterprises. He has written a book about Sphinx.&#13;
&#13;
Jan Ulrich Hasecke is founding member of the Python Software Verband e.V.. He produced a bunch of German marketing materials for Python, Python web frameworks and the Python content management system Plone. He is member of the Plone foundation, translated the Plone UI into German and has written the German User Guide for Plone with Sphinx. &#13;
&#13;
</description><image>https://ep2014.europython.eu/site_media/avatars/Jan-Ulrich-Hasecke-600px.png</image></speaker></speakers></entry><entry id="91"><category>Training</category><audience>Novice</audience><topics></topics><start>1400</start><duration>180</duration><room id="7">A05/A06</room><title>Learning Robot Framework Hands-On</title><description>*Agenda:*&#13;
&#13;
-  Introduction and installations 20min&#13;
-  Creating first keyword-driven test 60min&#13;
-  Break 10min&#13;
-  Creating data-driven tests 50min&#13;
-  Creating tests using Gherkin syntax 20min&#13;
-  Demo: Writing custom test libraries 10min&#13;
- Q&amp;A and wrap-up 10min&#13;
&#13;
*Prerequisites:*&#13;
&#13;
- Python 2.6 or 2.7&#13;
- pip&#13;
- Windows, Linux, or OSX&#13;
</description><speakers><speaker id="846"><name>Jussi Malinen</name><profile>https://ep2014.europython.eu/en/accounts/profile/846/</profile><description>I am one of the developers of Robot Framework, an open source test automation framework implemented in Python.</description><image></image></speaker></speakers></entry><entry id="96"><category>Talk</category><audience>Novice</audience><topics><topic>Education</topic></topics><start>1430</start><duration>30</duration><room id="2">B05/B06</room><title>pymove3D - Python moves the world - Attractive programming for young people.</title><description>The second time a [contest](  http://pymove3d.pysv.org/)  for schoolar students is organized by the Python Software Verband e.V.. It is about to write a Python program that is executable in Blender using its 3D capabilities.&#13;
The talk overall gives an overview what experience we got by these ideas and how we want to continue.&#13;
</description><speakers><speaker id="5"><name>Reimar Bauer</name><profile>https://ep2014.europython.eu/en/accounts/profile/5/</profile><description>&#13;
&#13;
Reimar Bauer is a long-term MoinMoin Wiki developer.&#13;
&#13;
He likes FOSS projects and is a member of the pyCologne (http://pycologne.de) Usergroup. Since five years he organizes Python Barcamps (http://pythoncamp.de) in Cologne. Since 2012-11-01 he is a board member of the Python Software Verband e.V. (http://pysv.org) and become elected as PSF Fellow in 2013.&#13;
&#13;
Reimar Bauer (PySV) is responsible for the competition (http://pymove3d.pysv.org): Python moves the world - Attractive programming for young people . A short summary at speakerdeck.&#13;
&#13;
For living he works at the Forschungszentrum J&#252;lich GmbH, IEK. His fields of work/research development of data acquisition and analysis software, and system administration.&#13;
</description><image>https://ep2014.europython.eu/site_media/avatars/bild_reimar_1.jpg</image></speaker></speakers></entry><entry id="81"><category>Talk</category><audience>Novice</audience><topics><topic>Web</topic></topics><start>1430</start><duration>30</duration><room id="1">C01</room><title>How to make a full fledged REST API with Django OAuth Toolkit</title><description>World is going mobile and the need of a backend talking with your apps is getting more and more important. What if I told you writing REST APIs in Python is so easy you don&#8217;t need to be a backend expert? Take generous tablespoons of Django, mix thoroughly with Django REST Framework and dust with Django OAuth Toolkit to bake the perfect API in minutes.</description><speakers><speaker id="110"><name>Federico Frenguelli</name><profile>https://ep2014.europython.eu/en/accounts/profile/110/</profile><description>None is better than Null</description><image>https://ep2014.europython.eu/site_media/avatars/gravatar_1.jpeg</image></speaker></speakers></entry><entry id="47"><category>Talk</category><audience>Advanced</audience><topics><topic>Web</topic></topics><start>1430</start><duration>30</duration><room id="4">B09</room><title>log everything with logstash and elasticsearch</title><description>When your application grows beyond one machine you need a central space to log, monitor and analyze what is going on. Logstash and elasticsearch let you store your logs in a structured way. Kibana is a web fronted to search and aggregate your logs.</description><speakers><speaker id="722"><name>Peter Hoffmann</name><profile>https://ep2014.europython.eu/en/accounts/profile/722/</profile><description>I'm a Software Developer from Karlsruhe, Germany. I have studied Software Engineering at the TU Berlin.   I'm working  as a Senior Web Developer at Blue Yonder. &#13;
</description><image>https://ep2014.europython.eu/site_media/avatars/peter-hoffmann.jpg</image></speaker></speakers></entry><entry id="16"><category>Talk</category><audience>Novice</audience><topics><topic>Education</topic></topics><start>1430</start><duration>30</duration><room id="5">A08</room><title>VPython goes to School</title><description>Using VPython in high school is an interesting way to introduce students to get in touch with computer programming concepts and to link computer science with other disciplines like Math, Geometry, Physics, Chemistry</description><speakers><speaker id="259"><name>Maurizio Boscaini</name><profile>https://ep2014.europython.eu/en/accounts/profile/259/</profile><description>I love programming and I love learn and teach computer science. I'm teacher in a high school, adjunct professor at the University of Verona and I teach Scratch in the primary school and Robotics in the middle school.</description><image>https://ep2014.europython.eu/site_media/avatars/mauri_in_madeira_2013.jpg</image></speaker></speakers></entry><entry id="41"><category>Talk</category><audience>Novice</audience><topics><topic>Web</topic></topics><start>1500</start><duration>30</duration><room id="1">C01</room><title>Full Stack Python</title><description>There has been a lot of noise about being a "full stack developer" recently. What does the full web stack look like for Python and how do you go about learning each piece?&#13;
&#13;
This talk will guide you up the layers from the server that handles the web request through the JavaScript that executes on a user's browser. </description><speakers><speaker id="671"><name>Matt Makai</name><profile>https://ep2014.europython.eu/en/accounts/profile/671/</profile><description>Matt Makai is a Python web developer based in Washington, D.C. He was a DjangoCon 2013 speaker on "Making Django Play Nicely with Third Party Services" as well as a speaker throughout the past year at San Francisco Django, Memphis Python, Omaha Python, Django Boston, DC Python, DC Continuous Integration, and Django District. Matt's been working with Django since 0.96 and writes Full Stack Python (http://www.fullstackpython.com/) to help new developers understand how to deploy their Python-powered web applications. </description><image>https://ep2014.europython.eu/site_media/avatars/matt-makai.jpg</image></speaker></speakers></entry><entry id="52"><category>Talk</category><audience>Novice</audience><topics><topic>Python Core</topic></topics><start>1500</start><duration>30</duration><room id="5">A08</room><title>PyPy status talk (a.k.a.: no no, PyPy is not dead)</title><description>The current status of PyPy, with a particular focus on what happened in the last two years, since the last EuroPython PyPy talk.  We will give a brief overview of the current speed and the on-going development efforts on the JIT, the GC, NumPy, Python 3 compatibility, CFFI, STM...</description><speakers><speaker id="119"><name>Armin Rigo</name><profile>https://ep2014.europython.eu/en/accounts/profile/119/</profile><description>Armin Rigo is one of the founders and lead developers of the PyPy project, which began in 2003. He has taken part in all areas, from the Python language definition to the RPython translation framework, including the garbage collector, the tracing just-in-time compiler, and now the Software Transactional Memory part.</description><image>https://ep2014.europython.eu/site_media/avatars/arigo.639x400.png</image></speaker></speakers></entry><entry id="97"><category>Talk</category><audience>Novice</audience><topics><topic>Education</topic></topics><start>1500</start><duration>30</duration><room id="2">B05/B06</room><title>Teaching Python: To infinity and beyond</title><description>Dgplug summer training is a free online IRC based course which aims to teach FOSS ideas and programming in general using Python to new programmers/stduents. In this talk we share our experiences, lesson learned, hoping that people will be able to replicate this in other parts of the world. </description><speakers><speaker id="711"><name>Kushal Das</name><profile>https://ep2014.europython.eu/en/accounts/profile/711/</profile><description>Python Core developer. Working as Community Gardener in Eucalyptus.</description><image>https://ep2014.europython.eu/site_media/avatars/me2.jpg</image></speaker></speakers></entry><entry id="53"><category>Talk</category><audience>Advanced</audience><topics><topic>Embedded Devices</topic></topics><start>1500</start><duration>30</duration><room id="4">B09</room><title>GNU/Linux Hardware Emulation with Python</title><description>* Do want to test the connection code to a wifi/gsm network, but you haven't any dongle?&#13;
&#13;
* Do you want to check your software notification when the battery is low, but you're testing your application on your desktop?&#13;
&#13;
* Do you want to manipulate the data coming from a device, but you've lend it to someone else?&#13;
&#13;
*No problem, you can emulate all these hardware with Python!*</description><speakers><speaker id="702"><name>Stefano Cotta Ramusino</name><profile>https://ep2014.europython.eu/en/accounts/profile/702/</profile><description>Software Engineer in embedded software solutions and hw/sw integrations, he is a GNU/Linux developer for the openmamba distribution.&#13;
&#13;
Stefano is an Open Source supporter and tries to bring more people to this world, also with the laboratories of the GNU/Linux course he leads from the beginning at the Polytechnic University of Turin.</description><image>https://ep2014.europython.eu/site_media/avatars/stefano_cotta_ramusino.jpg</image></speaker></speakers></entry><entry id="14"><category></category><audience></audience><topics></topics><start>1530</start><duration>30</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Coffee Break</title><description></description><speakers></speakers></entry><entry id="24"><category></category><audience></audience><topics></topics><start>1600</start><duration>90</duration><room id="1">C01</room><title>Lightning Talks</title><description></description><speakers></speakers></entry></day><day date="2014-07-23"><entry id="120"><category>Keynote</category><audience>Novice</audience><topics></topics><start>0900</start><duration>45</duration><room id="1">C01</room><title>Will I still be able to get a job in 2024 if I don't do TDD?</title><description>Geoffrey Moores's book "Crossing the chasm" outlines the difficulties&#13;
faced by a new, disruptive technology, when adoption moves from&#13;
innovators and visionaries into the mainstream. Test Driven Development&#13;
is clearly a disruptive technology, that changes the way you approach&#13;
software design and testing. It hasn't yet been embraced by everyone,&#13;
but is it just a matter of time? Ten years from now, will a non-TDD&#13;
practicing developer experience the horror of being labelled a&#13;
technology adoption 'laggard', and be left working exclusively on&#13;
dreadfully boring legacy systems?&#13;
&#13;
It could be a smart move to get down to your nearest Coding Dojo and&#13;
practice TDD on some Code Katas. On the other hand, the thing with&#13;
disruptive technologies is that even they can become disrupted when&#13;
something better comes along. What about Property-Based Testing?&#13;
Approval Testing? Outside-In Development?&#13;
&#13;
In this talk, I'd like to look at the chasm-crossing potential of TDD&#13;
and some related technologies. My aim is that both you and I will still&#13;
be able to get a good job in 2024.&#13;
</description><speakers><speaker id="1330"><name>Emily Bache</name><profile>https://ep2014.europython.eu/en/accounts/profile/1330/</profile><description>Emily Bache is a software developer and test automation specialist. Currently an employee of a Swedish company, Pagero, she works on their electronic invoicing product. Together with her team, she regularly delivers working software. Emily has previously worked as a developer in organizations as diverse as small startup and large corporation, using&#13;
Python as well as other languages such as Java, Scala and Ruby. For several years she worked as an independent consultant, facilitating many Coding Dojos and developer training events. Emily is a well-known conference speaker, and author of &#8220;The Coding Dojo Handbook&#8221;. She is originally from the U.K. but now lives in G&#246;teborg, Sweden.</description><image>https://ep2014.europython.eu/site_media/avatars/photo_1.jpg</image></speaker></speakers></entry><entry id="100"><category>Talk</category><audience>Novice</audience><topics><topic>Testing</topic></topics><start>1000</start><duration>30</duration><room id="4">B09</room><title>Introduction to pytest</title><description>pytest is a full featured testing tool that makes it possible to write &#8220;pythonic&#8221; tests. This talk will introduce pytest and some of its unique and innovative features. It will help you get started with pytest, by showing basic usage and configuration.</description><speakers><speaker id="757"><name>Andreas Pelme</name><profile>https://ep2014.europython.eu/en/accounts/profile/757/</profile><description></description><image></image></speaker></speakers></entry><entry id="43"><category>Talk</category><audience>Advanced</audience><topics><topic>Python Core</topic></topics><start>1000</start><duration>30</duration><room id="2">B05/B06</room><title>Tweaking libraries as a step towards secure programming</title><description>We will explore how to modify or rewrite some of Python core libraries to introduce monitoring and security functions, that can be adapted to work with existing code, to allow greater control over low level operations by ensuring proper separation between python and system objects.</description><speakers><speaker id="848"><name>Enrico Branca</name><profile>https://ep2014.europython.eu/en/accounts/profile/848/</profile><description>Enrico Branca is an experienced researcher with specialist knowledge in Cyber security. He has been working in information security for over a decade with experience in software security, information security management, and cyber security R&amp;D. He has been trained and worked in various roles during his career, including Senior Security Engineer, Security Architect, Disaster Recovery Specialist, Microsoft Security Specialist and others, and his current role as Independent Researcher in Cyber Intelligence.</description><image></image></speaker></speakers></entry><entry id="102"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1000</start><duration>30</duration><room id="5">A08</room><title>How to improve Your Work and Private Life with Agile</title><description>Life and programming are equally complex. Software developers are using Agile to manage complexity and improve team communication. Is Agile limited to programming? We found it by far isn&#8217;t. In our talk, you will hear how we used Agile methods to get married, raise kids and run a scientific career.</description><speakers><speaker id="723"><name>Kristian Rother</name><profile>https://ep2014.europython.eu/en/accounts/profile/723/</profile><description>Kristian Rother is a Python trainer with a background in scientific programming. He specializes in methods for interactive teaching. Kristians is a certified Scrum Master, Toastmasters Advanced Communicator Bronze and Past President of the Spreeredner speaking club in Berlin.</description><image>https://ep2014.europython.eu/site_media/avatars/Kristian.jpg</image></speaker><speaker id="353"><name>Magdalena Rother</name><profile>https://ep2014.europython.eu/en/accounts/profile/353/</profile><description>Magdalena Rother during her PhD developed a software on 3D RNA modeling (www.genesilico.pl/moderna/) that resulted in 7 published articles. She is coauthor on a paper on bioinformatic software development. Currently she actively develops a system biology software in Python at the Humboldt University Berlin (www.rxncon.org).</description><image>https://ep2014.europython.eu/site_media/avatars/MRother_photo_2.png</image></speaker></speakers></entry><entry id="32"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1000</start><duration>30</duration><room id="1">C01</room><title>Embedding Python: Charming the Snake with C++</title><description>At the example of our in-house distributed scheduling system, we discuss the challenges of embedding the Python interpreter in a C++ program. Besides the actual integration of the interpreter, efficient data exchange between both languages is discussed. In addition, this presentation demonstrates how higher-level abstractions further diminish the language barrier.</description><speakers><speaker id="410"><name>Michael K&#246;nig</name><profile>https://ep2014.europython.eu/en/accounts/profile/410/</profile><description>Michael studied physics at the Karlsruhe Institute of Technology. In 2011, he got a PhD for his work on computational methods for the simulation of nanophotonic systems.&#13;
&#13;
Since 2011 he works at Blue Yonder GmbH as a software developer, mainly programming in C++ and Python. At http://clean-cpp.org, he also maintains a blog on clean software development in C++.</description><image>https://ep2014.europython.eu/site_media/avatars/20130424_BlueYonder_151.jpg</image></speaker></speakers></entry><entry id="99"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1000</start><duration>30</duration><room id="3">B07/B08</room><title>Writing multi-language documentation using Sphinx</title><description>How to write multi-language documentation? What tools can you use? What mistakes should you avoid? This talk is based on the experiences I gathered while working on several multi-language documentation projects using [Sphinx](http://sphinx-doc.org/).</description><speakers><speaker id="572"><name>Markus Zapke-Gr&#252;ndemann</name><profile>https://ep2014.europython.eu/en/accounts/profile/572/</profile><description>[Markus Zapke-Gr&#252;ndemann](http://www.keimlink.de/) looks back on over 13 years of experience in software development and works for more than six years as self-employed software developer, consultant and trainer. His focus is on developing web applications with Django and integration with Mercurial. He is the owner of [transcode](http://www.transcode.de/), a company offering Python and Django software development and training.&#13;
</description><image>https://ep2014.europython.eu/site_media/avatars/Portrat_2009_550x550_1.jpg</image></speaker></speakers></entry><entry id="17"><category>Training</category><audience>Novice</audience><topics></topics><start>1000</start><duration>180</duration><room id="6">A03/A04</room><title>PySide - Develop System GUI</title><description>Program Structure&#13;
===============&#13;
The outline of the course would be as follows:&#13;
&#13;
1. Introduction - 30 Minutes&#13;
-------------------------------&#13;
* Getting Started with PySide&#13;
* Setting Up PySide&#13;
* Importing PySide Objects &#13;
* First PySide Application &#13;
&#13;
2. Windowed Application Creation - 30 Minutes&#13;
----------------------------------------------------&#13;
* Creating a Sample Window&#13;
* Application Icon &#13;
* Showing tooltip &#13;
* Closing a Window -Close Button and Quit &#13;
* Centering the Window&#13;
* About and License Box&#13;
&#13;
3. Menus, Toolbar and Layout Management - 30 Minutes&#13;
-------------------------------------------------&#13;
&#13;
* Status, Menu and Tool bar creation&#13;
* Layout Policies and Management &#13;
* Absolute Positioning &#13;
* Layout Containers &#13;
* SDI and MDI &#13;
* Creation of a Simple text editor &#13;
&#13;
4. Events and Signals - 30 Minutes&#13;
---------------------------------------&#13;
* Event Management &#13;
* Signals and Slots&#13;
&#13;
5. Miscellaneous - 30 Minutes&#13;
---------------------------------&#13;
* Dialogs and Widgets&#13;
* Database connectivity &#13;
&#13;
Break and General Interaction - 30 Minutes&#13;
------------------------------------------------&#13;
&#13;
Prerequisites&#13;
=============&#13;
&#13;
The users would have to install/build PySide. It is better if you have already built PySide on your system. &#13;
&#13;
For building PySide please refer to the following:&#13;
&#13;
* [Mac OS](http://qt-project.org/wiki/Building_PySide_on_Mac_OS_X)&#13;
* [Linux / Unix](http://qt-project.org/wiki/Building_PySide_on_Linux)&#13;
* [Windows](http://qt-project.org/wiki/Building_PySide_on_Windows)&#13;
&#13;
Alternatively, you can read my book on PySide if you like to know what would be covered in the session.&#13;
&#13;
[PySide GUI Application Development](http://www.packtpub.com/pyside-gui-application-development/book)&#13;
--------------------------------------------&#13;
&#13;
If you have some difficulties in installing please feel free to contact me anytime.&#13;
&#13;
* [My Web Page](http://venkateshwaranloganathan.com)&#13;
* [My FB Page](http://www.packtpub.com/pyside-gui-application-development/book)&#13;
* [My Twitter Profile](https://twitter.com/anandvenkat4)&#13;
####Looking forward to connect with you all, See you at the conference.</description><speakers><speaker id="271"><name>Venkateshwaran Loganathan</name><profile>https://ep2014.europython.eu/en/accounts/profile/271/</profile><description>Working as a Software Developer in an MNC. Have authored a book on PySide by the name "PySide GUI Application Development" by Packt Publishers. More of me at http://venkateshwaranloganathan.com&#13;
&#13;
Have involved myself in the development of projects in the open source page. Worked on  C, Python and Node.js extensively.</description><image>https://ep2014.europython.eu/site_media/avatars/Swimming_Pic.jpg</image></speaker></speakers></entry><entry id="88"><category>Training</category><audience>Expert</audience><topics></topics><start>1000</start><duration>180</duration><room id="7">A05/A06</room><title>An introduction to Machine learning with Scikit-learn</title><description>Tutorial outline&#13;
=============&#13;
&#13;
* Basics of numpy and matplotlib for manipulating and visualizing data.&#13;
* Basic concepts of machine learning&#13;
* Simple classification examples&#13;
* Simple regression examples&#13;
* Measuring model performance: cross-validation&#13;
* Extracting features from text&#13;
* Linear Models&#13;
* Random forests and boosted trees&#13;
* On-line learning to tackle big data&#13;
* Dimensionality reduction: clustering and projections&#13;
&#13;
&#13;
Teaching method&#13;
===============&#13;
&#13;
This is a hands-on course. Students are strongly encouraged to work along with the trainer at the interactive prompt. There will be exercises the students need to do on their own. Experience shows that this active involvement is essential for an effective learning.&#13;
&#13;
Software used&#13;
====================&#13;
&#13;
Please bring your laptop with the operating system of your choice (Linux, Mac OS X, Windows). In addition to Python 2.6 or 2.7 or 3.X we need:&#13;
&#13;
* IPython (for interactive work with scientific plotting)&#13;
* Matplotlib&#13;
* scikit-learn and its dependencies (numpy, scipy)&#13;
&#13;
If installing all these requirements, that have compiled dependencies, is&#13;
difficult, consider using anaconda http://continuum.io/downloads or&#13;
Canopy https://www.enthought.com/products/canopy/&#13;
</description><speakers><speaker id="853"><name>Ga&#235;l Varoquaux</name><profile>https://ep2014.europython.eu/en/accounts/profile/853/</profile><description>Ga&#235;l Varoquaux is an INRIA faculty researcher working on computational science for brain imaging in the Neurospin brain research institute (Paris, France). His research focuses on modeling and mining brain activity in relation to cognition. Years before the NSA, he was hoping to make bleeding-edge data processing available across new fields, and he has been working on a mastermind plan building easy-to-use open-source software in Python. He is a core developer of scikit-learn, joblib, and Mayavi, a nominated member of the PSF, and often teaches scientific computing with Python using http://scipy-lectures.github.com.</description><image>https://ep2014.europython.eu/site_media/avatars/gael.png</image></speaker></speakers></entry><entry id="3"><category></category><audience></audience><topics></topics><start>1030</start><duration>30</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Breakfast</title><description></description><speakers></speakers></entry><entry id="51"><category>Talk</category><audience>Advanced</audience><topics><topic>Python Core</topic></topics><start>1100</start><duration>45</duration><room id="3">B07/B08</room><title>Using All These Cores: Transactional Memory in PyPy</title><description>PyPy, the Python implementation written in Python, experimentally supports Transactional Memory (TM). The strength of TM is to enable a novel use of multithreading, inheritently safe, and not limited to special use cases like other approaches. This talk will focus on how it works under the hood.</description><speakers><speaker id="119"><name>Armin Rigo</name><profile>https://ep2014.europython.eu/en/accounts/profile/119/</profile><description>Armin Rigo is one of the founders and lead developers of the PyPy project, which began in 2003. He has taken part in all areas, from the Python language definition to the RPython translation framework, including the garbage collector, the tracing just-in-time compiler, and now the Software Transactional Memory part.</description><image>https://ep2014.europython.eu/site_media/avatars/arigo.639x400.png</image></speaker></speakers></entry><entry id="110"><category>Talk</category><audience>Novice</audience><topics><topic>Web</topic></topics><start>1100</start><duration>45</duration><room id="1">C01</room><title>Design considerations while Evaluating,Developing and deploying a distributed task processing system</title><description>With growing world of web, there are numerous use-cases which require tasks to be executed in an asynchronous manner and in a distributed fashion. &#13;
Celery is one of the most robust, scalable, extendable and easy-to-implement framework available for distributed task processing. While developing applications using Celery, I have had considerable amount of learning's in terms of what design choices one should be aware of while evaluating an existing system or developing own system from scratch.</description><speakers><speaker id="99"><name>Konark Modi</name><profile>https://ep2014.europython.eu/en/accounts/profile/99/</profile><description>Working as an engineer with MakeMyTrip.com (Online travel company based out of India). Python comes as the default language for me for tasks of any length, breadth and depth be it DevOps, Automation, Distributed task processing, Data Analysis, BigData ecosystem.</description><image>https://ep2014.europython.eu/site_media/avatars/profile_pic-resized.jpg</image></speaker></speakers></entry><entry id="2"><category>Talk</category><audience>Advanced</audience><topics><topic>Testing</topic></topics><start>1100</start><duration>45</duration><room id="4">B09</room><title>Don't fear our new robot overlords!</title><description>This talk will show you GoldenEye. A setup of a robot, image recognition and Python. What could be better?&#13;
&#13;
GoldenEye uses computer vision to detect icons on an attached mobile device and then tells a robot to tap them. All off these tests are written in python's unittest module and the API is as easy as possible to make writing complex tests an ease.</description><speakers><speaker id="165"><name>Philip Brechler</name><profile>https://ep2014.europython.eu/en/accounts/profile/165/</profile><description>Philip Brechler works as an iOS professional in Berlin since 2011. When he got the chance he used Python with Django for his backends and web projects. In 2011 he created OwnTube, a video CMS based on Django and in in 2012 he created covr.li a website for pretty notebooks, also based on Django.</description><image>https://ep2014.europython.eu/site_media/avatars/_MG_2056_-_Arbeitskopie_2.jpg</image></speaker></speakers></entry><entry id="114"><category>Talk</category><audience>Advanced</audience><topics><topic>Python Core</topic></topics><start>1145</start><duration>45</duration><room id="3">B07/B08</room><title>Stackless: Recent advancements and future goals</title><description>Stackless (formerly known as Stackless-Python) is an enhanced variant of the Python-language. Stackless is best &#13;
known for its lightweight microthreads. But that's not all. In this talk Stackless core developers demonstrate&#13;
recent advancements regarding multi-threading, custom-scheduling, debugging with Stackless and explain future &#13;
plans for Stackless. </description><speakers><speaker id="656"><name>Christian Tismer</name><profile>https://ep2014.europython.eu/en/accounts/profile/656/</profile><description>I stumbled over Python in 1996.&#13;
This changed my life:&#13;
&#13;
- created the Starship Python in 1997 (because I had nothing else to share)&#13;
- learned C and C++ in order to&#13;
- became a core developer&#13;
&#13;
I invented Stackless Python in 1998 and tried to change the world ;-)&#13;
Co-founded PyPy in 2003 and worked full-time on it during EU funding.&#13;
&#13;
Now my main focus is again on Stackless.</description><image>https://ep2014.europython.eu/site_media/avatars/Christian_Tismer_EP2014_small.jpg</image></speaker><speaker id="252"><name>Anselm Kruis</name><profile>https://ep2014.europython.eu/en/accounts/profile/252/</profile><description>Anselm Kruis works as a Senior Solution Architect for science + computing ag, a Bull subsidiary. He started software development 25 years ago and enjoys the simplicity of Python since over 10 years, mostly using Jython and nowadays Stackless Python. If allowed by professional constraints, he is happy to utilise and contribute to open software projects.</description><image>https://ep2014.europython.eu/site_media/avatars/kruis-gr.jpg</image></speaker><speaker id="777"><name>Kristj&#225;n Valur J&#243;nsson</name><profile>https://ep2014.europython.eu/en/accounts/profile/777/</profile><description>Software Architect at CCP Games, and core contributor to Stackless</description><image>https://ep2014.europython.eu/site_media/avatars/KV2_Portrait.jpg</image></speaker></speakers></entry><entry id="7"><category>Talk</category><audience>Novice</audience><topics><topic>Gaming</topic></topics><start>1145</start><duration>45</duration><room id="1">C01</room><title>Brain Waves for Hackers</title><description>A new class of cheap consumer EEG devices allows ordinary hackers and even high school students a glimpse into the human brain.&#13;
&#13;
Using the Neurosky Mindwave headset we can read brain waves via bluetooth. In this talk I will present ways to interface with this device and to analyze their data, mostly from the perspective of a Python hacker, and not so much from the perspective of academic research or the development of production-ready software. &#13;
&#13;
I will convey the basic scientific and technical background, keeping in mind the non-medical audience, and touch on several practical applications, especially Neurofeedback and its use for personal mental training and potential therapeutic uses.&#13;
&#13;
The Audience can expect to walk away with a basic knowledge of EEG analysis, Neurofeedback and how to start experimenting with these devices on their own.</description><speakers><speaker id="225"><name>Andreas Klostermann</name><profile>https://ep2014.europython.eu/en/accounts/profile/225/</profile><description>I'm a freelance programmer, mostly web application development and student of veterinary medicine.&#13;
&#13;
My main "computing" interests are in data analysis, genomics, bayesian statistics and web development.&#13;
&#13;
My main "medical" interest are small animal medicine and "all animal" genetics.&#13;
&#13;
As a self-help junkie I took an interest to mindfulness based meditation and general mental training. I also developed a guide to memory techniques and mnemonics for use in practical situations.</description><image></image></speaker></speakers></entry><entry id="44"><category>Talk</category><audience>Expert</audience><topics><topic>Best Practices</topic></topics><start>1145</start><duration>45</duration><room id="4">B09</room><title>Test Driven Infrastructure</title><description>The (perceived) risk of the DevOps is that too many people get the right to "break" the platform.&#13;
&#13;
Test Driven Infrastructure is about adapting proven ideas from our developer colleagues to the development and operations of Infrastructure services like virtualization, OS provisioning, postfix configuration, httpd configuration, ssh tuning, SAN LUN mounting and others.&#13;
&#13;
This talk shows how ImmobilienScout24 utilizes more and more test driven development in IT operations to increase quality and to mitigate the risk of opening up the infrastructure developmen to all developers.</description><speakers><speaker id="696"><name>Schlomo Schapiro</name><profile>https://ep2014.europython.eu/en/accounts/profile/696/</profile><description>Schlomo Schapiro works as a Systems Architect and Open Source Evangelist at ImmobilienScout24, the leading German real estate market place. Core areas of interest are open source solutions and web operations.&#13;
&#13;
The ImmobilienScout24 web platform is based on Linux, Apache, Tomcat and open standards. We are currently creating a new deployment and management solution for our data center based on RPM packages. The solution is written in Python and Bash and published at http://yadt-project.org.&#13;
&#13;
Schlomo maintains several successful open source projects and is a regular speaker at various conferences. Schlomo is a strong DevOps and web operations advocate and writes regularly for German IT magazines and his BLOG (http://blog.schlomo.schapiro.org). See the homepage on http://www.schapiro.org/schlomo or the profile on http://go.schapiro.org/schlomo for more information.&#13;
</description><image>https://ep2014.europython.eu/site_media/avatars/Schlomo_Schapiro_Large.jpg</image></speaker></speakers></entry><entry id="64"><category>Talk</category><audience>Advanced</audience><topics><topic>Science</topic></topics><start>1145</start><duration>45</duration><room id="2">B05/B06</room><title>Performance Python for Numerical Algorithms</title><description>This talk is about several approaches to implement high performing numerical algorithms and applications in Python. It introduces into approaches like vectorization, multi-threading, parallelization (CPU/GPU), dynamic compiling, high throughput IO operations.&#13;
&#13;
The approach is a practical one in that every approach is illustrated by specific Python examples.</description><speakers><speaker id="730"><name>Dr. Yves J. Hilpisch</name><profile>https://ep2014.europython.eu/en/accounts/profile/730/</profile><description>The Python Quant&#13;
&#13;
Managing Director Europe of Continuum Analytics&#13;
&#13;
Lecturer for Mathematical Finance at Saarland University</description><image></image></speaker></speakers></entry><entry id="48"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1145</start><duration>45</duration><room id="5">A08</room><title>Compress Me, Stupid!</title><description>Compression is a general technique for reducing the size of datasets that normally lie on disk or that should be sent remotely.  But time has come to use it as a means to accelerate applications that uses in-memory data too.&#13;
&#13;
[Blosc](http://www.blosc.org) is a high-performance meta-compressor that is meant to do that.</description><speakers><speaker id="695"><name>Francesc Alted</name><profile>https://ep2014.europython.eu/en/accounts/profile/695/</profile><description>Francesc Alted is a Python and C hacker.  He works as a freelancer helping others to squeeze the last drop of performance out of systems. He also loves doing training on performance Python.&#13;
&#13;
Creator of PyTables, Blosc, BLZ and developer of numexpr and Blaze.&#13;
&#13;
He also enjoys good movies.</description><image>https://ep2014.europython.eu/site_media/avatars/foto-meua.png</image></speaker></speakers></entry><entry id="8"><category></category><audience></audience><topics></topics><start>1230</start><duration>90</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Lunch</title><description></description><speakers></speakers></entry><entry id="57"><category>Talk</category><audience>Novice</audience><topics><topic>Gaming</topic></topics><start>1400</start><duration>30</duration><room id="2">B05/B06</room><title>3D sensors and Python: A space odyssey</title><description>This talk will show how to build a simple open source based NUI (Natural User Interface)  game with 3D Sensors, incorporating PyOpenNI with PyGame and WebGL.&#13;
OpenNI allows you operate several 3D sensors, enabling hardware independent game development (supported 3D sensors are Microsoft Kinect, PrimeSense Carmine or Asus XTion). It also runs on Linux, Mac OS X and Windows.</description><speakers><speaker id="55"><name>Celia Cintas</name><profile>https://ep2014.europython.eu/en/accounts/profile/55/</profile><description>Celia Cintas is a PhD student in Computer Science working at CENPAT on "Human Evolutionary Biology" research group. Focused on 2 and 3D landmarking, reconstruction and visualization.&#13;
Co organizer of SciPyCon Argentina 2013 and 2014.&#13;
Free software advocate.&#13;
Assistant Professor at UNPSJB in Fundamentals of Computer Science and Business Intelligence.</description><image>https://ep2014.europython.eu/site_media/avatars/avatar_.png</image></speaker></speakers></entry><entry id="11"><category>Talk</category><audience>Advanced</audience><topics><topic>Testing</topic></topics><start>1400</start><duration>30</duration><room id="4">B09</room><title>Design Your Tests</title><description>While getting started testing often provides noticeable immediate improvement for any developer, it's often not until the realization that tests are things that need *design* to provide maximal benefit that developers begin to appreciate or even *enjoy* them.&#13;
&#13;
We'll investigate how building shallow, transparent layers for your tests makes for better failures, clearer tests, and quicker diagnoses.</description><speakers><speaker id="204"><name>Julian Berman</name><profile>https://ep2014.europython.eu/en/accounts/profile/204/</profile><description>Julian is the lead developer of the media platform at Magnetic (http://www.magnetic.com/), a frequent contributor to the NYC Python Meetup group and a testing lover.&#13;
&#13;
He can also be found most hours of the day as tos9 on Freenode in more channels than he can count, including #python.</description><image>https://ep2014.europython.eu/site_media/avatars/DSC00083.jpg</image></speaker></speakers></entry><entry id="36"><category>Talk</category><audience>Novice</audience><topics><topic>Best Practices</topic></topics><start>1400</start><duration>30</duration><room id="1">C01</room><title>How to Setup a new Python Project</title><description>Setting up a new Python project from scratch can be quite hard. How to structure your files and directories. Where should my packages, modules, documentation and unit tests go? How do I configure setup.py, Sphinx and so on? We provide proven answers!</description><speakers><speaker id="430"><name>Felix Wick</name><profile>https://ep2014.europython.eu/en/accounts/profile/430/</profile><description>I did my diploma and PhD in physics at the Karlsruhe Institute of Technology. The topic of my research was experimental particle physics with focus on statistical data analysis. Then I changed to economy and joined the company Blue Yonder in 2011 to work as a Data Scientist.</description><image>https://ep2014.europython.eu/site_media/avatars/felix1.jpg</image></speaker><speaker id="375"><name>Florian Wilhelm</name><profile>https://ep2014.europython.eu/en/accounts/profile/375/</profile><description>Data Scientist with a mathematical background. PhD from the Karlsruher Institute of Technology in Applied Mathematics. &#13;
Focus on mathematical modelling and machine learning as well as business analytics. Years of experience in several customer projects at Blue Yonder.</description><image>https://ep2014.europython.eu/site_media/avatars/Foto_400dpi.jpg</image></speaker></speakers></entry><entry id="75"><category>Talk</category><audience>Advanced</audience><topics><topic>Best Practices</topic></topics><start>1400</start><duration>30</duration><room id="5">A08</room><title>Automatic code reviews</title><description>A lot of great Python tools exist to analyse and report on your codebase, but they can require a lot of  initial set up to be useful. Done right, they can be like an automatic code review. This talk will explain how to set up and get the best out of these tools, especially for an existing, mature codebase.</description><speakers><speaker id="402"><name>Carl Crowder</name><profile>https://ep2014.europython.eu/en/accounts/profile/402/</profile><description>A sporadic career has seen me creating internal tools for one of the largest MMORPGs around, creating both the frontend web interface and a backend statistics system for a mobile-phone search engine, as well as laying the groundwork for a micropayment company.&#13;
&#13;
I currently work as a "DevOps" engineer at akvo.org (ie, I do sysadmin with puppet and tell everyone else to be more DevOps!),&#13;
and as a side project I started https://landscape.io - aiming to provoke people into using static analysis for their Python code by making it super easy.</description><image></image></speaker></speakers></entry><entry id="67"><category>Training</category><audience>Novice</audience><topics></topics><start>1400</start><duration>180</duration><room id="6">A03/A04</room><title>Learn Test-Driven-Development and Django by building a simple web application from scratch.</title><description>## Part 1 -- Getting Django set up using a Functional Test&#13;
&#13;
We start by writing a minimal functional test using Selenium, and using it to test that we've got Django installed, and its dev server up and running on our local PC.&#13;
&#13;
We make our initial commit with the Django project and its functional test file. The Testing Goat is introduced.&#13;
&#13;
## Part 2 -- Switching to unittest&#13;
&#13;
We convert our FT to using the unittest module, including setUp, tearDown and some of the unittest assertion helper functions.&#13;
&#13;
## Part 3 -- Unit tests for a simple front page&#13;
&#13;
Next we start building the front page of our site. We learn how to use the Django test runner, and how to write a unit test which tests a Django view.&#13;
We do some intitial config in Django's settings.py, and then learn about urls.py and views.py.&#13;
We learn the feel of the unit test - code cycle, where we write code with small, incremental changes, re-running the tests each time.&#13;
&#13;
## Part 4 -- Switch to templates, refactoring, and discuss TDD philosophy&#13;
&#13;
A moment's reflection on what we test and why -- what functional tests are for, how they differ from unit tests, what we should and shouldn't test, and discuss the merits of testing trivial functions.&#13;
&#13;
We then switch our home page view from building HTML out of strings to using a template.&#13;
We learn how Django templates work, and what "proper" refactoring is. Refactoring Cat is introduced&#13;
&#13;
## Part 5 -- Processing user input using forms, POST and database models&#13;
&#13;
We learn how to use Selenium to simulate user input to our site.&#13;
We start to build up a simple solution to process user submissions using an HTML form, a POST request. We take a few wrong turns along the way, and see how TDD guides us towards the right answer.&#13;
&#13;
## Part 6 -- Better design using related models and multiple views.&#13;
&#13;
We fix our broken implementation from the previous section, using incremental, step-by-step changes to the code.&#13;
We learn how to make changes to the code in such a way that we always go from working state to working state.&#13;
&#13;
We also learn about foreign key relationships, and a simple REST-ish URL structure, with several simple views each doing one job well.&#13;
&#13;
Further topics, if time permits:&#13;
&#13;
- layout and styling using Bootstrap CSS framework&#13;
- mocks&#13;
- continuous integration (Jenkins introduction)&#13;
- deployment!&#13;
</description><speakers><speaker id="251"><name>Andrea Crotti</name><profile>https://ep2014.europython.eu/en/accounts/profile/251/</profile><description>I'm currently working as Python/Django developer in London after other Python experiences in the aerospace and hardware industries.&#13;
&#13;
I started to use Python 7 years ago and it still does not stop to amaze me how much I can get done with so little elegant code.&#13;
&#13;
I've been attending Python conferences in the last few years and enjoyed giving talks about various topics, from decorators to TDD.</description><image>https://ep2014.europython.eu/site_media/avatars/andrea_face_1.jpg</image></speaker></speakers></entry><entry id="26"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1430</start><duration>30</duration><room id="5">A08</room><title>Python refactoring with Rope and Traad</title><description>Rope is a powerful Python refactoring library. Traad (Norwegian for &#8220;thread&#8221;) is a tool which makes it simpler to integrate rope into IDEs via a simple HTTP API. In this session we&#8217;ll look at how traad and rope work together and how traad integrates with at least one popular editor.&#13;
</description><speakers><speaker id="382"><name>Austin Bingham</name><profile>https://ep2014.europython.eu/en/accounts/profile/382/</profile><description>Austin is a founding director of Sixty North, a software consulting, training, and application development company. A native of Texas, in 2008 Austin moved to Stavanger, Norway where he helped develop industry-leading oil reservoir modeling software in C++ and Python. Prior to that he worked at National Instruments developing LabVIEW, at Applied Research Labs (Univ. of Texas at Austin) developing sonar systems for the U.S. Navy, and at a number of telecommunications companies. He is an experienced presenter and teacher, having spoken at numerous conferences, software groups, and internal corporate venues. Austin is also an active member of the open source community, contributing regularly to various Python and Emacs projects, and he&#8217;s the founder of Stavanger Software Developers, one of the largest and most active social software groups in Stavanger. Austin holds a Master of Science in Computer Engineering from the University of Texas at Austin.&#13;
</description><image>https://ep2014.europython.eu/site_media/avatars/austin_800x1100.jpg</image></speaker></speakers></entry><entry id="83"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1430</start><duration>30</duration><room id="4">B09</room><title>Identifying Bugs Before Runtime With Jedi</title><description>Finding bugs before runtime has been an incredibly tedious task in Python. [Jedi][1] is an autocompletion library with interesting capabilities: It understands a lot of the dynamic features of Python. I will show you how we can use the force of (the) Jedi to identify bugs in your Python code. It's not just another pylint. It's way better.&#13;
&#13;
[1]: https://github.com/davidhalter/jedi</description><speakers><speaker id="746"><name>David Halter</name><profile>https://ep2014.europython.eu/en/accounts/profile/746/</profile><description>Works as a full time Python Open Source engineer. He has started the Jedi library two years ago, which improves the state of autocompletion for the Python ecosystem.</description><image>https://ep2014.europython.eu/site_media/avatars/2Z0B2344.jpg</image></speaker></speakers></entry><entry id="30"><category>Talk</category><audience>Novice</audience><topics><topic>System Administration</topic></topics><start>1430</start><duration>30</duration><room id="2">B05/B06</room><title>Supercharge your development environment using Docker</title><description>These days applications are getting more and more complex. It's becoming&#13;
quite difficult to keep track of all the different components an application&#13;
needs to function (a database, an AMQP, a web server, a document store...). It keeps getting harder and harder to setup new development environments and to bring new developers into the team. Stuff works on one dev machine but doesn't on others? Code breaks often when deployed to production even though all tests were passing and it worked on the dev machine?&#13;
&#13;
The idea of this talk is to convey how important it is that we have our development environment as close to production as possible. That means setting up all those various services on your laptop/workstation.&#13;
&#13;
In this talk I am going to show how to utilize light weight lxc containers&#13;
using docker, and make your development process much more straightforward. How to share container images among your development team and be sure that everyone is running the exact same stack. Do all this without hogging too many resources, without the need for complex provisioning scripts and management systems. And above all else, how to do it fast!</description><speakers><speaker id="429"><name>Deni Bertovic</name><profile>https://ep2014.europython.eu/en/accounts/profile/429/</profile><description>Software Engineer from Zagreb, Croatia, currently focusing mainly on Python, but enjoys learning about Clojure, Haskell and FP languages in general. Deni likes to do Sysadmin/DevOps stuff with special interest in virtualization, continuous deployment and automating  everything he can. &#13;
When he's not hacking on open source, he spends most of his time happily coding away at GoodCode.io.</description><image>https://ep2014.europython.eu/site_media/avatars/me_2.jpg</image></speaker></speakers></entry><entry id="98"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1430</start><duration>30</duration><room id="1">C01</room><title>Getting involved in Open Source: A Beginner&#8217;s Perspective</title><description>Two beginner open source developers discuss how they got started, what are the obstacles that new developers face while getting started, what can maintainers do to get more newcomers involved in their open source projects.</description><speakers><speaker id="400"><name>Rishabh Raj</name><profile>https://ep2014.europython.eu/en/accounts/profile/400/</profile><description></description><image>https://ep2014.europython.eu/site_media/avatars/propic.jpg</image></speaker><speaker id="31"><name>Tarashish Mishra</name><profile>https://ep2014.europython.eu/en/accounts/profile/31/</profile><description>Tarashish Mishra is a web developer in making based in Bhubaneswar, India. He is studying computer science as an undergraduate student. He loves making web application and scraping web pages with Python. He tinkers with arduino and helps people learn to code in free time. </description><image>https://ep2014.europython.eu/site_media/avatars/pic.jpg</image></speaker></speakers></entry><entry id="33"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1500</start><duration>30</duration><room id="1">C01</room><title>I want to help! How to make your first contribution to open-source.</title><description>Do you like open-source? Would you like to give back somehow but are not sure what to do or where to start? Together we will look at the usual workflow for making any kind of contribution, using a real patch as an example.</description><speakers><speaker id="377"><name>Julie Pichon</name><profile>https://ep2014.europython.eu/en/accounts/profile/377/</profile><description>Julie is a software engineer at Red Hat and works on Horizon, the web dashboard for OpenStack. A big open-source supporter, she likes to get involved in projects aiming to help newcomers get started contributing to open-source. </description><image></image></speaker></speakers></entry><entry id="5"><category>Talk</category><audience>Novice</audience><topics><topic>System Administration</topic></topics><start>1500</start><duration>30</duration><room id="2">B05/B06</room><title>For lack of a better name(server): DNS Explained</title><description>You've deployed! But your friends can't see it - what's wrong? I'm betting DNS. Maybe you've fixed a couple of entries, point some records to hostnames, waited patiently for new domains to resolve only to notice your nameservers are incorrect. But what actually goes on with DNS? Come to this talk to find out how DNS works, and how to interact and create a DNS with Python. </description><speakers><speaker id="212"><name>Lynn Root</name><profile>https://ep2014.europython.eu/en/accounts/profile/212/</profile><description>Spotify Partner Engineer, PyLadies SF founder, Python Software Foundation board member, caffeine &amp; bacon addict.</description><image>https://ep2014.europython.eu/site_media/avatars/2013-09-30_at_3.31_PM.png</image></speaker></speakers></entry><entry id="12"><category>Talk</category><audience>Novice</audience><topics><topic>Testing</topic></topics><start>1500</start><duration>30</duration><room id="4">B09</room><title>Python in system testing</title><description>When you think about Python+testing, you usually think about testing your code - unittests, mostly. But it is not the only case! When you have a big system, you need to test it on much higher level - if only to check if all the components are wired in the right way. You may do it manually, but it is tedious and time-consuming - so you want to automate it. And here comes Python - the language of choice in many QA departments.</description><speakers><speaker id="314"><name>Katarzyna Jachim</name><profile>https://ep2014.europython.eu/en/accounts/profile/314/</profile><description>Quality Engineer by choice, Python fanboy, coding style freak.&#13;
&#13;
Katarzyna graduated from maths &amp; computer science from University of Warsaw. She was a PhD student in maths for a while, then wandered around in different companies and different IT-related jobs until she ended in a QA team and understood that this is the right job for her.&#13;
&#13;
Katarzyna has been using Python for 5 years, all this time for writing automated system/integration tests. First, for 9LivesData (NEC contractor), now, for 1.5 year, for Red Hat, where she is in RHEVM QE team.</description><image>https://ep2014.europython.eu/site_media/avatars/kasiazt_640x427_1.jpg</image></speaker></speakers></entry><entry id="1"><category>Talk</category><audience>Advanced</audience><topics><topic>Best Practices</topic></topics><start>1500</start><duration>30</duration><room id="5">A08</room><title>Growing Open Source Seeds</title><description>An in-depth review of the stages that most open source projects go though, and the decisions their maintainers face. Requests will be used as an example &#8212; lessons learned and best practices will be covered. </description><speakers><speaker id="179"><name>Kenneth Reitz</name><profile>https://ep2014.europython.eu/en/accounts/profile/179/</profile><description>Software Engineer, Photographer, and Artist. Author of Python Requests.  </description><image>https://ep2014.europython.eu/site_media/avatars/kr.png</image></speaker></speakers></entry><entry id="15"><category></category><audience></audience><topics></topics><start>1530</start><duration>30</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Coffee Break</title><description></description><speakers></speakers></entry><entry id="25"><category></category><audience></audience><topics></topics><start>1600</start><duration>90</duration><room id="2">B05/B06</room><title>Lightning Talks</title><description></description><speakers></speakers></entry><entry id="63"><category></category><audience></audience><topics></topics><start>1900</start><duration>30</duration><room>ALL</room><title>Social Event</title><description></description><speakers></speakers></entry></day><day date="2014-07-24"><entry id="35"><category></category><audience></audience><topics></topics><start>0900</start><duration>45</duration><room id="1">C01</room><title>Invited Talk</title><description></description><speakers></speakers></entry><entry id="79"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1000</start><duration>30</duration><room id="2">B05/B06</room><title>Conversing with people living in poverty</title><description>[Vumi](http://vumi.org) is a text messaging system designed to reach out to those in&#13;
poverty on a massive scale via their mobile phones. It's written in&#13;
Python using Twisted. This talk is about how and why we built it and&#13;
how you can join us in making the world a better place.</description><speakers><speaker id="754"><name>Simon Cross</name><profile>https://ep2014.europython.eu/en/accounts/profile/754/</profile><description>PyConZA and CTPUG organizer. Vumi developer. Habitual Pyweek entrant. </description><image>https://ep2014.europython.eu/site_media/avatars/simon.cross.png</image></speaker></speakers></entry><entry id="31"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1000</start><duration>30</duration><room id="1">C01</room><title>Multiplatform binary packaging and distribution of your client apps</title><description>Distributing your python app to clients it&#8217;s a common task that can become hard when &#8220;stand alone&#8221; and &#8220;obfuscated code&#8221; come as requirements.&#13;
&#13;
&#13;
Common answers in forums are on the lines of &#8220;Python is not the language you&#8217;re looking for&#8221; or &#8220;What are you trying to hide?&#8221; but another answer is possible.</description><speakers><speaker id="35"><name>Julia S.Simon</name><profile>https://ep2014.europython.eu/en/accounts/profile/35/</profile><description>Senior Software engineer at biicode.</description><image>https://ep2014.europython.eu/site_media/avatars/julia-galicia.jpg</image></speaker><speaker id="405"><name>Diego Rodriguez-Losada</name><profile>https://ep2014.europython.eu/en/accounts/profile/405/</profile><description>B.Sc in Engineering, MsC in Mechanics, PhD in Robotics and tenured track Professor in Automatics, Electronics and Informatics. &#13;
&#13;
Now on a leave, running Biicode.com as CTO, and enjoying his passion for SW developing.</description><image>https://ep2014.europython.eu/site_media/avatars/cara_alegre.jpg</image></speaker></speakers></entry><entry id="40"><category>Talk</category><audience>Novice</audience><topics><topic>Science</topic></topics><start>1000</start><duration>30</duration><room id="3">B07/B08</room><title>RISCy Business: Development of a RNAi design and off-target prediction software</title><description>RNA interference (RNAi) is a biological mechanism for targeted inhibition of gene expression. It has also been used routinely to discover genes involved in the interaction of plants with pathogenic fungi. To minimize the miss-targeting of unrelated genes and to maximize the RNAi efficiency, we have developed a PyQt based cross- platform software tool called &#8220;si-Fi&#8221;. Our aim of the talk is to show that also hobby programmers can use Python in a very useful way.</description><speakers><speaker id="63"><name>Stefanie L&#252;ck</name><profile>https://ep2014.europython.eu/en/accounts/profile/63/</profile><description>Stefanie L&#252;ck was born in Halberstadt, Germany. After finishing school, she moved to Braunschweig to start an apprenticeship as a biological technical assistant, which she successfully passed in 2002. Since October 2002, she has been working at the Leibniz Institute of Plant Genetics and Crop Plant Research in Gatersleben, Germany.&#13;
&#13;
Recently Stefanie got interested in learning programming, especially with Python. In the last few years she has developed a couple of software tools mostly for bioinformatic purposes.&#13;
&#13;
In her free time, she enjoys cycling and hiking in the mountains.</description><image>https://ep2014.europython.eu/site_media/avatars/me.jpg</image></speaker></speakers></entry><entry id="103"><category>Talk</category><audience>Novice</audience><topics><topic>Science</topic></topics><start>1000</start><duration>30</duration><room id="5">A08</room><title>The Shogun Machine Learning Toolbox</title><description>We present the Shogun Machine Learning Toolbox, a framework for Machine Learning, which is the art of finding structure in data, with applications in object recognition, brain-computer interfaces, robotics,  stock-prices prediction, etc. We give a gentle introduction to ML and Shogun's Python interface, focussing on intuition and visualisation.</description><speakers><speaker id="83"><name>Heiko Strathmann</name><profile>https://ep2014.europython.eu/en/accounts/profile/83/</profile><description>PhD student at Gatsby Unit, UCL London.&#13;
Machine Learning &amp; Computational Statistics, Neuroscience, Open-Source. &#13;
Core-developer of the Shogun Machine Learning Toolbox.</description><image>https://ep2014.europython.eu/site_media/avatars/Ohne_Titel_022.jpg</image></speaker></speakers></entry><entry id="25"><category>Talk</category><audience>Novice</audience><topics><topic>Web</topic></topics><start>1000</start><duration>30</duration><room id="4">B09</room><title>Eve - REST APIs for Humans&#8482;</title><description>Powered by Flask, Redis, MongoDB and good intentions the [Eve REST API framework](http://python-eve.org) allows to effortlessly build and deploy highly customizable, fully featured RESTful Web Services. The talk will introduce the project and its community, recount why and how it's being developed, and show the road ahead.</description><speakers><speaker id="123"><name>Nicola Iarocci</name><profile>https://ep2014.europython.eu/en/accounts/profile/123/</profile><description>Nicola is a passionate Python and C# developer based in Ravenna, Italy. He is the co-founder of C2K where leads the development of Amica 10, an accounting software solution for italian small business. He is creator and maintainer of a few open source projects, a MongoDB Master, and occasional Speaker.</description><image>https://ep2014.europython.eu/site_media/avatars/nicola.jpg</image></speaker></speakers></entry><entry id="89"><category>Training</category><audience>Advanced</audience><topics></topics><start>1000</start><duration>180</duration><room id="7">A05/A06</room><title>Iterators, Generators and Decorators</title><description>Iterators, generators and decorators are language features of Python that allow to write elegant solutions for certain types of problems. This tutorial provides a hands-on introduction to the underlying concepts. Numerous examples show what you can do with them in your daily programming work. &#13;
&#13;
## Iterators and Generators&#13;
&#13;
* Iterators (15 min)&#13;
* Generator functions (10 min)&#13;
* Generator expressions (10 min)&#13;
* Coroutines (15 min)&#13;
* Chaining (5 min)&#13;
* Itertools (15 min)&#13;
* Exercises (20 min)&#13;
&#13;
## Decorators&#13;
&#13;
* Using decorators (5 min)&#13;
* Writing simple decorators (15 min)&#13;
* Parameterized decorators (10 min)&#13;
* Chaining decorators (5 min)&#13;
* Class decorators (5 min)&#13;
* Best practice (10 min)&#13;
* Application for:&#13;
    * Argument checking (3 min)&#13;
    * Caching (3 min)&#13;
    * Logging (3 min)&#13;
    * Registering (3 min)&#13;
    * Verification (3 min)&#13;
* Exercises (25 min)  &#13;
</description><speakers><speaker id="13"><name>Mike M&#252;ller</name><profile>https://ep2014.europython.eu/en/accounts/profile/13/</profile><description>EuroPython 2014 Chair based on experience charing PyCon DE 2011 and  2012 as well as originator and lead organizer of EuroSciPy 2008 and 2009. Chair Board Python Software Verband e.V. (1. Vorsitzender des Vorstands). Python Trainer and CEO of Python Academy GmbH &amp; Co. KG. I have been teaching Python for about ten years and thus introduced several thousand people to this fine language. Oh, and I like Python ;).</description><image>https://ep2014.europython.eu/site_media/avatars/mmueller.jpg</image></speaker></speakers></entry><entry id="72"><category>Training</category><audience>Novice</audience><topics></topics><start>1000</start><duration>180</duration><room id="6">A03/A04</room><title>Einsteigertutorium Python</title><description>Das Tutorium soll folgende Schritte umfassen, wobei es vom Vorankommen und dem&#13;
gew&#252;nschten Detailgrad abh&#228;ngen wird, wieviel davon in der vorhandenen Zeit zu&#13;
schaffen ist:&#13;
&#13;
- Ausf&#252;hren eines sehr einfachen Programms ("Hello world") auf dem eigenen&#13;
  Rechner, Umgang mit der interaktiven Python-Umgebung (15-30 Minuten)&#13;
&#13;
- Erl&#228;uterung einiger syntaktischer Eigenheiten von Python an einem einfachen&#13;
  Beispiel, ggf. Diskussion der Unterschiede zu anderen Sprachen&#13;
  (30-45 Minuten)&#13;
&#13;
- Vorstellung der grundlegenden Programmkonstrukte (Bedingungen, Schleifen,&#13;
  Funktionen) und Datentypen (Zahlen, Text, Listen, Dictionarys) (60 Minuten)&#13;
&#13;
- Verwendung der Standardbibliothek in einem einfachen Beispiel (30 Minuten)&#13;
&#13;
- bei gen&#252;gend verbleibender Zeit: kurzer Einblick in Pythons Objektsystem:&#13;
  Klassen, Objekte, "Duck-Typing"&#13;
&#13;
- offene Fragerunde (15-45 Minuten)</description><speakers><speaker id="549"><name>Thomas Lotze</name><profile>https://ep2014.europython.eu/en/accounts/profile/549/</profile><description>Thomas Lotze has been working with Python at gocept gmbh &amp; co. kg for more than ten years. Having studies Physics before he turned to programming, he is now interested in building modern web applications in a free-software environment and has done so using Python web technologies (with an emphasis on Zope and friends) extensively. Thomas' other favourite occupation is photography.</description><image>https://ep2014.europython.eu/site_media/avatars/profilbild-norwegen.jpg</image></speaker></speakers></entry><entry id="4"><category></category><audience></audience><topics></topics><start>1030</start><duration>30</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Breakfast</title><description></description><speakers></speakers></entry><entry id="27"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1100</start><duration>45</duration><room id="2">B05/B06</room><title>The Return of "The Return of Peer to Peer Computing".</title><description>At last year's Europython Holger Krekel gave a keynote called "The Return of Peer to Peer Computing". He described how developers, in light of the Snowden surveillance revelations, ought to learn about and build decentralized peer-to-peer systems with strong cryptography.&#13;
&#13;
This talk introduces, describes and demonstrates both concepts and code that a group of Pythonistas have been working on since Holger's keynote. &#13;
&#13;
We asked ourselves two questions: what are the fundamental elements / abstractions of a peer-to-peer application and, given a reasonable answer to the first question, can we make a small and simple framework to facilitate the easy creation of peer-to-peer applications? Put another way, imagine a peer-to-peer equivalent of web frameworks like Django or Flask.&#13;
&#13;
We will present work done so far, discuss the sorts of application that might be written using such a  framework and explore how peer-to-peer technology could be both attractive and viable from an economic point of view.</description><speakers><speaker id="58"><name>Nicholas Tollervey</name><profile>https://ep2014.europython.eu/en/accounts/profile/58/</profile><description>Nicholas is a classically trained musician, philosophy graduate, teacher, writer and software developer. He's just like this biography: concise, honest and full of useful information.</description><image>https://ep2014.europython.eu/site_media/avatars/lookslikeme.JPG</image></speaker><speaker id="275"><name>Holger Krekel</name><profile>https://ep2014.europython.eu/en/accounts/profile/275/</profile><description>Founder of PyPy, main author  of pytest, tox, devpi and execnet projects.  Trainer and conference speaker. Likes playing Go, listening to DnB and Electro Swing and caring for his son. </description><image></image></speaker></speakers></entry><entry id="60"><category>Talk</category><audience>Advanced</audience><topics><topic>Web</topic></topics><start>1100</start><duration>45</duration><room id="3">B07/B08</room><title>How Disqus is using Django as the basis of our Service Oriented Architecture</title><description>#Abstract&#13;
Disqus maintains the largest Django app out there. And we love it! It has, however, grown rather large and unwieldy. In the last year Disqus has had an increasing number of smaller services cropping up based on several different platforms. So this talk will be about how we do continuous deployment with our emerging service-based infrastructure.</description><speakers><speaker id="26"><name>Adam Hitchcock</name><profile>https://ep2014.europython.eu/en/accounts/profile/26/</profile><description></description><image>https://ep2014.europython.eu/site_media/avatars/lu8ab0shplqbp5gsz92v.jpeg</image></speaker></speakers></entry><entry id="74"><category>Talk</category><audience>Advanced</audience><topics><topic>Best Practices</topic></topics><start>1100</start><duration>45</duration><room id="4">B09</room><title>Support Python 2 and 3 with the same code</title><description>Your library supports only Python 2, - but your users keep nagging you about Python 3 support?&#13;
&#13;
As Python 3 gets adopted more and more, users ask for Python 3 support in existing libraries for Python 2. Although there are several approaches, this talk focuses on using the very same code for a Python 2 and a Python 3 version.&#13;
&#13;
The talk discusses the main problems when supporting Python 3 and best practices to apply for compatibility with Python 2 and 3.</description><speakers><speaker id="673"><name>Stefan Schwarzer</name><profile>https://ep2014.europython.eu/en/accounts/profile/673/</profile><description>Stefan Schwarzer uses Python since 1999. He's written articles and a book on Python and given talks at several Python and Linux conferences. Although Stefan studied chemical engineering and has a doctor's degree in it, he's been working in software development since 2000. Nowadays Stefan is a freelancer in software development [1], mostly with Python. He's also the maintainer of the FTP client library ftputil [2].&#13;
&#13;
[1] http://sschwarzer.com&#13;
[2] http://ftputil.sschwarzer.net</description><image>https://ep2014.europython.eu/site_media/avatars/StefanSchwarzer.jpg</image></speaker></speakers></entry><entry id="84"><category>Talk</category><audience>Advanced</audience><topics><topic>Best Practices</topic></topics><start>1100</start><duration>45</duration><room id="5">A08</room><title>Metaprogramming, from decorators to macros</title><description>Starting off with the meaning of metaprogramming we quickly dive into the different ways Python allows this.&#13;
&#13;
First we talk about class and functions decorators, when decorators are not enough anymore we'll explore the wonders of metaclasses.&#13;
&#13;
In the last part of the talk we'll talk about macros, first in Lisp and then using the amazing [macropy library](https://github.com/lihaoyi/macropy).</description><speakers><speaker id="251"><name>Andrea Crotti</name><profile>https://ep2014.europython.eu/en/accounts/profile/251/</profile><description>I'm currently working as Python/Django developer in London after other Python experiences in the aerospace and hardware industries.&#13;
&#13;
I started to use Python 7 years ago and it still does not stop to amaze me how much I can get done with so little elegant code.&#13;
&#13;
I've been attending Python conferences in the last few years and enjoyed giving talks about various topics, from decorators to TDD.</description><image>https://ep2014.europython.eu/site_media/avatars/andrea_face_1.jpg</image></speaker></speakers></entry><entry id="70"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1100</start><duration>45</duration><room id="1">C01</room><title>Graph Databases, a little connected tour</title><description>There are many kinds of NoSQL databases like, document databases, key-value, column databases and graph databases.&#13;
In some scenarios is more convenient to store our data as a graph, because we want to extract and study information relative to these connections. In this scenario, graph databases are the ideal, they are designed and implemented to deal with connected information in a efficient way.</description><speakers><speaker id="175"><name>Francisco Fern&#225;ndez Casta&#241;o</name><profile>https://ep2014.europython.eu/en/accounts/profile/175/</profile><description>I work as software engineer at biicode in Madrid, Python is my main programming language but I also program in other languages like Erlang, Haskell, Clojure... My main interests are distributed systems, functional programming and graph databases. </description><image>https://ep2014.europython.eu/site_media/avatars/foto.jpeg</image></speaker></speakers></entry><entry id="34"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1100</start><duration>45</duration><room id="1">C01</room><title>Writing Awesome Command-Line Programs in Python</title><description>Command-Line programs can have a lot to them, including:&#13;
&#13;
* option parsing&#13;
* configuration&#13;
* output - colour, user output, and piping to other programs&#13;
&#13;
This is a tour through how to structure your code, tools in the standard library and some 3rd party libraries. Take your command-line programs to the next level!</description><speakers><speaker id="423"><name>Mark Smith</name><profile>https://ep2014.europython.eu/en/accounts/profile/423/</profile><description>Mark is a Python developer and trainer working in Edinburgh for FanDuel.com.&#13;
&#13;
He's been a Python developer for 14 years, mostly doing Web development, dev-ops, and hardware testing.&#13;
&#13;
In his spare time he drinks beer, crochets and runs the Edinburgh Python user group - but never all at the same time!</description><image>https://ep2014.europython.eu/site_media/avatars/512.png</image></speaker></speakers></entry><entry id="6"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1145</start><duration>45</duration><room id="2">B05/B06</room><title>How Pony ORM translates Python generators to SQL queries</title><description>Pony ORM is an Object-Relational Mapper implemented in Python. It uses an unusual approach for writing database queries using Python generators. Pony analyzes the abstract syntax tree of a generator and translates it to its SQL equivalent. The translation process consists of several non-trivial stages. In this talk one of Pony ORM authors will reveal the internal details of this process. </description><speakers><speaker id="229"><name>Alexey Malashkevich</name><profile>https://ep2014.europython.eu/en/accounts/profile/229/</profile><description>Author of Pony ORM with more than 15 years of practical experience in building enterprise-class software in various roles. Before founding his own start-up, Alexey worked as a Tech Lead in a NYC based financial company.</description><image>https://ep2014.europython.eu/site_media/avatars/eu_ava.jpg</image></speaker></speakers></entry><entry id="38"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1145</start><duration>45</duration><room id="3">B07/B08</room><title>Elasticsearch from the bottom up</title><description>This talk will teach you about Elasticsearch and Lucene's architecture. You will get tidbits of highly relevant information for the real world without having to plunge into academic information retrieval tomes.  &#13;
&#13;
While Elasticsearch makes Lucene easily available in a distributed setting, it helps to have some knowledge about the underlying algorithms and data structures. Understanding how these data structures are *used* makes implementing search easier. Knowing how the indexes are *built* helps you keep things reliably performant.&#13;
&#13;
The key data structure in search is the powerful and versatile inverted index, which is actually simple and not too hard to understand.  We will start there, then ascend through the abstraction layers until we end up with an overview of how a distributed search cluster processes searches and changes.</description><speakers><speaker id="504"><name>Alex Brasetvik</name><profile>https://ep2014.europython.eu/en/accounts/profile/504/</profile><description>Alex Brasetvik is a founder and senior software engineer at Found AS - a company whose primary product is a hosted Elasticsearch service. Before working for Found, Alex earned his Master in Computer Science at NTNU, with an emphasis on database- and search engines. He has spent the past eight years on problem solving and solutions related to search, focusing on Elasticsearch in the last three years. </description><image>https://ep2014.europython.eu/site_media/avatars/alex_square.png</image></speaker></speakers></entry><entry id="23"><category>Talk</category><audience>Novice</audience><topics><topic>Python Core</topic></topics><start>1145</start><duration>45</duration><room id="1">C01</room><title>Python Debugger Uncovered</title><description>This talk will explain how to implement a debugger for Python. We'll start with setting a simple trace function, then look how it is implemented in modern IDEs like PyCharm and Pydev. &#13;
Then we go further in the details and uncover the tricks used to implement some cool features like exception handling and multiprocess debugging.</description><speakers><speaker id="358"><name>Dmitry Trofimov</name><profile>https://ep2014.europython.eu/en/accounts/profile/358/</profile><description>Dmitry Trofimov has worked as a software developer for several companies using a lot of different programming languages.  Dmitry beliefs that Python language is the one that brings the most pleasure while programming. Working currently on PyCharm IDE he is making development in Python even more pleasurable. </description><image>https://ep2014.europython.eu/site_media/avatars/DSC_4262-smaller.jpg</image></speaker></speakers></entry><entry id="82"><category>Talk</category><audience>Advanced</audience><topics><topic>Science</topic></topics><start>1145</start><duration>45</duration><room id="4">B09</room><title>Scikit-learn to "learn them all"</title><description>**Scikit-learn** is a powerful Python library, providing implementations of &#13;
many of the most popular machine learning algorithms. &#13;
This talk will provide a general overview of the main "batteries" included in &#13;
Scikit-learn, along with working code examples and comparisons with other &#13;
existing machine learning tools, in order to get the best from this wonderful &#13;
package for our machine learning code.</description><speakers><speaker id="250"><name>Valerio Maggio</name><profile>https://ep2014.europython.eu/en/accounts/profile/250/</profile><description>Valerio Maggio has a PhD. in Computational Science from the University of Naples &#8220;Federico II&#8221; and he is currently a Postdoc researcher at the University of Salerno. His research interests are mainly focused on Unsupervised Machine Learning and Software Engineering, recently combined with Semantic Web technologies for linked data and big data analysis.&#8232;&#13;
&#13;
Valerio started developing open source software in 2004, when he was a bachelor degree student. In 2006, he wrote his first lines of Python in his favourite Vim-based development environment. From then on, he contributed to several open source projects in this language. Currently he uses Python as the mainstream language for his machine learning code, making an intensive use of Scikit-learn and Matplotlib to crunch, munge, and analyse experimental data.&#13;
&#13;
He presented two talks at EuroPython 2012, and he recently  reviewed a book on Matplotlib Plotting Cookbook&#13;
&#13;
Valerio is also a member of the Italian Python community, who enjoys playing chess and drinking tea.</description><image>https://ep2014.europython.eu/site_media/avatars/me_kyoto_3.jpg</image></speaker></speakers></entry><entry id="80"><category>Talk</category><audience>Advanced</audience><topics><topic>Science</topic></topics><start>1145</start><duration>45</duration><room id="5">A08</room><title>Probabilistic Programming in Python</title><description>Probabilistic Programming allows flexible specification of statistical models to gain insight from data. The high interpretability and ease by which different sources can be combined has huge value for Data Science. PyMC3 features next generation sampling algorithms, an intuitive model specification syntax, and just-in-time compilation for speed, to allow estimation of large-scale probabilistic models.&#13;
</description><speakers><speaker id="761"><name>Thomas Wiecki</name><profile>https://ep2014.europython.eu/en/accounts/profile/761/</profile><description>Thomas is currently finishing up his Ph.D. at Brown University where he investigates the neuronal underpinnings of mental illness using quantitative methods like Bayesian Modeling. &#13;
&#13;
He also works as a quantitative researcher for Quantopian Inc (https://www.quantopian.com) where he helps to build the worlds' first browser based algorithmic trading platform. </description><image>https://ep2014.europython.eu/site_media/avatars/tw3.jpg</image></speaker></speakers></entry><entry id="9"><category></category><audience></audience><topics></topics><start>1230</start><duration>90</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Lunch</title><description></description><speakers></speakers></entry><entry id="19"><category>Talk</category><audience>Advanced</audience><topics><topic>Web</topic></topics><start>1400</start><duration>30</duration><room id="1">C01</room><title>Morepath: a Python Web Framework with Super Powers</title><description>[Morepath](http://morepath.readthedocs.org) is a server web framework written with modern, rich client web development in mind. Why another new Python web framework in 2014? Because it can be done better:&#13;
&#13;
*  Morepath understands how to construct hyperlinks from models.&#13;
* Writing a generic view is like writing any other view.&#13;
* You can reuse, extend and override apps as easily as you can construct them.&#13;
&#13;
Even if you don't end up using Morepath, you will learn something about web development.&#13;
</description><speakers><speaker id="284"><name>Martijn Faassen</name><profile>https://ep2014.europython.eu/en/accounts/profile/284/</profile><description>Martijn Faassen has been a Python developer since 1998. He's been involved in Zope, Grok, helped start EuroPython and was the original creator of lxml.&#13;
&#13;
More recently he's been hacking on Morepath, a Python web framework with super powers.&#13;
</description><image></image></speaker></speakers></entry><entry id="56"><category>Talk</category><audience>Novice</audience><topics><topic>Education</topic></topics><start>1400</start><duration>30</duration><room id="2">B05/B06</room><title>Python for Zombies: 15.000 enrolled in the first Brazilian MOOC to teach Python</title><description>Experiences of how we spread the Python community in Brazil with a MOOC (Massive Open Online Course) to teach programming. Hacking basic modules and classes to obtain the "Answer to the Ultimate Question of Life, the Universe, and Everything". A funny way to teach programming.</description><speakers><speaker id="46"><name>Fernando Masanori Ashikaga</name><profile>https://ep2014.europython.eu/en/accounts/profile/46/</profile><description>I love teaching. Python, NoSQL, Business Analytics. First Brazilian Python MOOC  http://pycursos.com/python-para-zumbis/</description><image>https://ep2014.europython.eu/site_media/avatars/Masanori_winter.jpg</image></speaker></speakers></entry><entry id="3"><category>Talk</category><audience>Novice</audience><topics><topic>Best Practices</topic></topics><start>1400</start><duration>30</duration><room id="4">B09</room><title>Lessons learned from building Elasticsearch client</title><description>Lessons learned when building a client for a fully distributed system and trying to minimize context-switching pains when using multiple languages.</description><speakers><speaker id="152"><name>Honza Kr&#225;l</name><profile>https://ep2014.europython.eu/en/accounts/profile/152/</profile><description>Honza is a Python programmer and Django core developer &#8211; since he is scared of&#13;
the bright and shiny world of browsers, designers, and users he prefers to stay&#13;
buried deep in the infrastructure code and just provides others with tools to&#13;
do the actual site-building.&#13;
&#13;
Since 2008 Honza has been building content web sites for fun and profit. During&#13;
this time he discovered Elasticsearch which lead to him joining the company&#13;
behind it in 2013 to work on the Python drivers.</description><image>https://ep2014.europython.eu/site_media/avatars/cb.jpg</image></speaker></speakers></entry><entry id="78"><category>Talk</category><audience>Novice</audience><topics><topic>Science</topic></topics><start>1400</start><duration>30</duration><room id="5">A08</room><title>How to become a software developer in science?</title><description>My path from *'Hello world'* to software development was long and hard. The approach I learned during my research may help you to create high quality software and improve as a developer. The talk covers how you can benefit from your non-IT knowledge, atomize your project and how collaboration accelerates your learning.</description><speakers><speaker id="353"><name>Magdalena Rother</name><profile>https://ep2014.europython.eu/en/accounts/profile/353/</profile><description>Magdalena Rother during her PhD developed a software on 3D RNA modeling (www.genesilico.pl/moderna/) that resulted in 7 published articles. She is coauthor on a paper on bioinformatic software development. Currently she actively develops a system biology software in Python at the Humboldt University Berlin (www.rxncon.org).</description><image>https://ep2014.europython.eu/site_media/avatars/MRother_photo_2.png</image></speaker></speakers></entry><entry id="90"><category>Training</category><audience>Advanced</audience><topics></topics><start>1400</start><duration>180</duration><room id="7">A05/A06</room><title>Topic Modeling For Fun and Profit</title><description>* 20 min: motivation &amp; dataset: the English Wikipedia&#13;
* 30 min: NLP: tokenization, lemmatization (textblob)&#13;
* 60 min: topic modeling (gensim)&#13;
* 60 min: document indexing, querying, parallelization (gensim)&#13;
* 10 min: cushion/extra: "Wikipedia similarity" web app (flask)&#13;
&#13;
Install beforehand: IPython, NumPy, SciPy, TextBlob, Gensim + optionally Flask+Angular (all Python &amp; open-source).&#13;
&#13;
Linux, OSX and Windows are all fine.</description><speakers><speaker id="274"><name>Radim Rehurek</name><profile>https://ep2014.europython.eu/en/accounts/profile/274/</profile><description>Radim runs a privately owned consulting company that specializes in building systems for intelligent, automated analysis of (big) data: radimrehurek.com.&#13;
&#13;
A tech geek and developer at heart, Radim founded and led Seznam.cz&#8217;s research department (Sklik, Search, Zbozi, &#8230;), then moved on to develop and consult for various international companies and startups.&#13;
&#13;
Radim has lived around the globe with his wife for the past decade, but moved to Prague after receiving the Czech Hope award for his PhD thesis in 2012. He&#8217;s now trying to evangelize data-driven business solutions and help aspiring entrepreneurs make the most of their data.</description><image>https://ep2014.europython.eu/site_media/avatars/radim2.png</image></speaker></speakers></entry><entry id="77"><category>Training</category><audience>Novice</audience><topics></topics><start>1400</start><duration>180</duration><room id="6">A03/A04</room><title>Python for System Administrators</title><description># Structure&#13;
Training is split in various sections, each with its goal and examples/exercises . &#13;
Arguments are introduced step by step, eg.:&#13;
&#13;
- reading files is done in that way&#13;
&#13;
        &gt;def cat(fpath):&#13;
        &gt;   return list(open(fpath))&#13;
&#13;
- futher concepts are added after&#13;
&#13;
        &gt;def cat(fpath):&#13;
        &gt;   with open(fpath) as fp:&#13;
        &gt;      return list(fp) &#13;
&#13;
Talk is Linux oriented but multiplatform and tested examples for Windows and Mac OS are provided.&#13;
&#13;
Further details on [Labs/Exercises are on github](https://github.com/ioggstream/python-course/blob/master/python-for-sysadmin/).&#13;
&#13;
## Timings &#13;
&#13;
- Intro to ipython 15minutes&#13;
- Gathering system data 30minutes&#13;
- NoseTesting 15minutes&#13;
- Parsing 60minutes&#13;
- Processing data 45minutes&#13;
- Plotting 15minutes&#13;
&#13;
## Requirements&#13;
### software&#13;
- python 2.7+  (python3 requires matplotlib1.2+ )&#13;
- ipython, nosetest 1.1+&#13;
- modules: matplotlib, scipy, numpy, psutil, (flask is optional)&#13;
- network connectivity: some exercises require getting performance data (eg. ping rtt ...) &#13;
&#13;
[Detailed environment setup instructions for Linux Windows and MacOS are here.](https://github.com/ioggstream/python-course/blob/master/python-for-sysadmin/README.setup)&#13;
&#13;
Total novices can:&#13;
&#13;
-  prepare themselves for the training using [the provided hands-on introduction to python](https://github.com/ioggstream/python-course/blob/master/python-for-sysadmin/) . &#13;
- test their environment [using this script](https://github.com/ioggstream/python-course/blob/master/python-for-sysadmin/test_prerequisites.py)&#13;
&#13;
&#13;
### skills&#13;
- Basic command-line skills: managing files and processes.&#13;
- Basic Python: simple operations with int, str, list.  &#13;
&#13;
&#13;
&#13;
&#13;
# Intro to ipython 15m&#13;
## Goal&#13;
Review of ipython features and some useful functions. Class skill assessment.&#13;
## Agenda&#13;
  - use tab completion&#13;
  - running system commands, moving files and filtering output with filter() and grep()&#13;
  - reading text files&#13;
  - modules: __builtin__, ipython, shutil&#13;
## Teaser&#13;
 - running unix and windows commands in ipython &#13;
&#13;
        &gt; # windows has etc\hosts too ;)&#13;
        &gt; ret = !type c:\windows\system32\drivers\etc\hosts&#13;
        &gt; ip = ret.grep("localhost").fields(0)&#13;
&#13;
 - [more teaser](https://github.com/ioggstream/python-course/blob/master/python-for-sysadmin/01_ipython.ipy) &#13;
&#13;
&#13;
# System data gathering 30m &#13;
## Goal&#13;
Gather system data  into list and dict reading files and command output.&#13;
&#13;
## Agenda&#13;
- multiplatform filename management: the os.path module&#13;
- shell globbing and expansion&#13;
- unicode everywhere&#13;
- getting command output with subprocess.check_output&#13;
- multiplatform data gathering with psutil&#13;
- modules: os, sys, glob, subprocess, time, psutil, csv&#13;
## Teaser&#13;
- simple and multiplatform path management (Unix, Windows)&#13;
      &#13;
        &gt; hosts, basedir = "etc/hosts", "/"&#13;
        &gt; if 'win' in sys.platform:&#13;
        &gt;     basedir = 'c:/windows/system32/drivers'&#13;
        &gt; hosts = os.path.join(basedir, hosts)&#13;
        &gt; hosts = os.path.normpath(hosts)&#13;
&#13;
- Show threads information using glob and list comprehensions (Linux)&#13;
&#13;
        &gt; import glob&#13;
        &gt; def linux_threads(pid):&#13;
        &gt;     path = "/proc/{}/task/*/status".format(pid)&#13;
        &gt;     t_info = ('Pid', 'Tgid', 'voluntary')&#13;
        &gt;     for t in glob.glob(path):&#13;
        &gt;         t_info = [x for x in open(t) if x.startswith(t_info) ]&#13;
        &gt;         print(t_info)    &#13;
&#13;
- [more teaser](https://github.com/ioggstream/python-course/blob/master/python-for-sysadmin/01_system_data_gathering.py)&#13;
&#13;
## Exercises&#13;
- Implement a multiplatform [pgrep-like](http://en.wikipedia.org/wiki/Pgrep) function;&#13;
- Use psutil  to write the my_iostat() function returning  cpu% and [iops](http://en.wikipedia.org/wiki/IOPS); &#13;
&#13;
&#13;
# NoseTesting 15m&#13;
## Goal&#13;
Run a simple test script with setup and teardown. &#13;
## Agenda&#13;
 - importance of testing&#13;
 - nose testing framework&#13;
 - a sample script &#13;
 - capturing output and logging  &#13;
## Teaser&#13;
- a nose test class&#13;
&#13;
        &gt; class MyTest:&#13;
        &gt;     @classmethod&#13;
        &gt;     def setup_class():&#13;
        &gt;        print("before the testsuite")&#13;
        &gt;     @classmethod&#13;
        &gt;     def teardown_class():&#13;
        &gt;        print("after the testsuite")&#13;
        &gt;     def test_one():&#13;
        &gt;         assert os.path.isfile("/etc/hosts"), "Missing /etc/hosts"&#13;
&#13;
- a [complete test template for exercises](https://github.com/ioggstream/python-course/blob/master/python-for-sysadmin/02_nosetests_full.py) &#13;
&#13;
## Exercise&#13;
- use psutil to write a testscript checking your hardware (disk size, number of cpus, free virtual memory) &#13;
- Use tab-completion or help(psutil) to discover all its features.&#13;
&#13;
# Parsing 60m&#13;
## Goal&#13;
Parse simple log files and estimate parsing time.&#13;
## Agenda &#13;
 - parsing best practices&#13;
    - create a parse_test function&#13;
    - write parsing code&#13;
    - create a library containing test&#13;
    - run simple benchmarks on parsing code with %timeit&#13;
    - benchmarking pitfalls&#13;
  - basic regular expressions&#13;
    - re.findall, re.split, re.sub&#13;
    - advantages of re.compile (readability, performances)&#13;
 -  rapid glance to a real-life example:  [py-jstack code is a Tomcat Heap Monitor](https://github.com/ioggstream/py-jstack)&#13;
&#13;
## Teaser&#13;
- benchmarking regular expressions with ipython&#13;
&#13;
        &gt; test_all_regexps = ("..", "[a-f0-9]{2}", "[A-Fa-f0-9")&#13;
        &gt; mac = "0024e8b43320"&#13;
        &gt; for re_s in test_all_regexps:&#13;
        &gt;     re_c = re.compile(re_s)&#13;
        &gt;     print("Not compiled ", re_s)&#13;
        &gt;     %timeit ':'.join(re.findall(re_s, mac))&#13;
        &gt;     print("Compiled ", re_s)&#13;
        &gt;     %timeit ':'.join(re_c.findall(mac))&#13;
&#13;
- more [teaser from github](https://github.com/ioggstream/python-course/blob/master/python-for-sysadmin/03_parsing_benchmarks.py)&#13;
&#13;
## Exercises&#13;
- write and benchmark the [parse_maillog function](https://github.com/ioggstream/python-course/blob/master/python-for-sysadmin/03_parsing_test.py)&#13;
- using the previous function get a list of all destination domains of the  [provided maillog file](https://github.com/ioggstream/python-course/blob/master/python-for-sysadmin/data/) &#13;
&#13;
# Simple Processing 45m&#13;
## Goal&#13;
Manage the gathered data and find relation between them. Get essential information like standard deviation, distribution and linear correlation. &#13;
&#13;
## Agenda&#13;
- the zip function, transposing data with zip&#13;
- basic statistics with scipy&#13;
   - max, min and standard deviation: the importance of stdev&#13;
   - data distribution  with defaultdict, percentiles&#13;
   -  what's linear correlation and when can help&#13;
- netfishing correlations with itertools.combinations&#13;
- modules: scipy, collections, itertools&#13;
&#13;
## Teaser&#13;
- try all possible combinations to find linear correlation between data series&#13;
&#13;
        &gt; from itertools import combinations&#13;
        &gt; from scipy.stats.stats import pearsonr &#13;
        &gt; table = {&#13;
        &gt;    'cpu_percent': [10, 23, 55, ... ]&#13;
        &gt;    'iops': [2132, 3212, 3942, ... ]&#13;
        &gt;    'netio': [1.32e+9,  1.45e+9, ...]&#13;
        &gt; }&#13;
        &gt; for k1, k2 in combinations(table, 2):&#13;
        &gt;    r_coeff, probability = pearsonr(table[k1], table[k2])&#13;
        &gt;    print("linear correlation between {} and {} is {}".format(&#13;
        &gt;         k1, k2, r_coeff)&#13;
&#13;
- more [teaser from github](https://github.com/ioggstream/python-course/blob/master/python-for-sysadmin/04_simple_processing.py)&#13;
&#13;
## Exercises&#13;
- get a 4-hourly email distribution from the previous maillog file&#13;
- use the previous my_iostat() function to gather system data under load. Is there a linear correlation between cpu% and iops? &#13;
&#13;
&#13;
# Plotting 15m&#13;
## Goal&#13;
 Understand what and howto plot. Infer system behaviour from plot.&#13;
## Agenda&#13;
 - matplotlib.pyplot&#13;
 - importance of plotting versus linear correlation&#13;
 - use scatter plots to show relations&#13;
 - use histograms to find data and time distribution&#13;
 - using colors to mark time in 2d plot &#13;
## Teaser&#13;
- generate different plots with time-layered data (one color per hour)&#13;
&#13;
        &gt; colors = cycle([color0..color23])&#13;
        &gt; chunks = range(0, minutes_in_day, 60)&#13;
        &gt; for k1,k2 in combinations(table):&#13;
        &gt;     for t in chunks:&#13;
        &gt;         s0 = table[k1][t:t+60]&#13;
        &gt;         s1 = table[k2][t:t+60]&#13;
        &gt;         pyplot.scatter(s0, s1, color=next(colors))&#13;
        &gt;    pyplot.savefig("{}-{}.png".format(k1,k2))&#13;
        &gt;    pyplot.close()&#13;
&#13;
- an histogram plot returns distribution and percentile informations&#13;
&#13;
         &gt; distribution, percentiles, _ = plt.hist(ping_rtt)&#13;
         &gt; plt.show()&#13;
&#13;
- use scatter plot to relate the previously collected cpu_percent and io_usage &#13;
- scatter and histogram plotting data from previous  exercises&#13;
&#13;
# Bonus Tracks&#13;
If the class finish before time I usually let people choice between:  &#13;
&#13;
- review exercises, share job experiences, question time&#13;
- show how to use PSL to test services&#13;
- show how to expose monitoring data with flask&#13;
&#13;
## PSL Toolkit  &#13;
&#13;
### Goal&#13;
Using programs embedded in the PSL (telnet, http, smtp and imap client) for simple monitoring&#13;
### Agenda&#13;
- telnetlib&#13;
- SimpleHTTPServer, http&#13;
- smtplib&#13;
- imaplib &#13;
### Teaser&#13;
         &gt; python -m SimpleHTTPServer 8080&#13;
         &gt; python3 -m http.server 8080&#13;
         &gt; python -m telnetlib localhost 8080 &#13;
         &gt; GET /  HTTP/1.1&#13;
         &gt;&#13;
## Flask&#13;
Using flask to serve monitored data&#13;
### Agenda&#13;
- the flask microframework&#13;
- a simple test page&#13;
- expose monitoring data via web&#13;
</description><speakers><speaker id="248"><name>Roberto Polli</name><profile>https://ep2014.europython.eu/en/accounts/profile/248/</profile><description>Roberto works at Babel, migrating big mail infrastructures to open solutions. Develops in Python, C and Java to foster communities around various FLOSS, trying to bring both social and IT innovation.&#13;
&#13;
He's a Red Hat Certified Engineer and Virtualization Administrator, but loves maintaining free software, including the caldav java library: caldav4j.&#13;
&#13;
A life ago he took a Math degree, and he's really proud of it.&#13;
</description><image>https://ep2014.europython.eu/site_media/avatars/rpolli_400.jpg</image></speaker></speakers></entry><entry id="59"><category>Talk</category><audience>Novice</audience><topics><topic>Best Practices</topic></topics><start>1430</start><duration>30</duration><room id="4">B09</room><title>Traversing Mazes the pythonic way and other Algorithmic Adventures</title><description>**Graphs** define a powerful mental (and mathematical) model of structure, &#13;
representing the building blocks of formulations and/or solutions &#13;
for many *hard problems*. In this talk, graphs and (*some of the*) main &#13;
graph-related algorithms will be analysed from a **very pythonic** angle:&#13;
the [Zen of Python][1] (e.g., *beautiful is better than ugly*, &#13;
*simple is better than complex*, *readability counts*).&#13;
&#13;
[1]: http://www.python.org/dev/peps/pep-0020/ "PEP20: The Zen of Python"</description><speakers><speaker id="250"><name>Valerio Maggio</name><profile>https://ep2014.europython.eu/en/accounts/profile/250/</profile><description>Valerio Maggio has a PhD. in Computational Science from the University of Naples &#8220;Federico II&#8221; and he is currently a Postdoc researcher at the University of Salerno. His research interests are mainly focused on Unsupervised Machine Learning and Software Engineering, recently combined with Semantic Web technologies for linked data and big data analysis.&#8232;&#13;
&#13;
Valerio started developing open source software in 2004, when he was a bachelor degree student. In 2006, he wrote his first lines of Python in his favourite Vim-based development environment. From then on, he contributed to several open source projects in this language. Currently he uses Python as the mainstream language for his machine learning code, making an intensive use of Scikit-learn and Matplotlib to crunch, munge, and analyse experimental data.&#13;
&#13;
He presented two talks at EuroPython 2012, and he recently  reviewed a book on Matplotlib Plotting Cookbook&#13;
&#13;
Valerio is also a member of the Italian Python community, who enjoys playing chess and drinking tea.</description><image>https://ep2014.europython.eu/site_media/avatars/me_kyoto_3.jpg</image></speaker></speakers></entry><entry id="21"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1430</start><duration>30</duration><room id="2">B05/B06</room><title>Jython in practice</title><description>A lot of people have heard of Jython, some have tried it, but it seems few have actually deployed it in a corporate environment. In this talk I'll share my experiences in using Jython as a testbed for Java applications, for rapid prototyping in Java desktop and web environments, and for embedding scripting capabilities in Java products. </description><speakers><speaker id="299"><name>Fredrik H&#229;&#229;rd</name><profile>https://ep2014.europython.eu/en/accounts/profile/299/</profile><description>Freelance software developer and contractor, occasional speaker or teacher. Chair of Python Sverige, and instigator of the first PyCon Sweden.&#13;
</description><image>https://ep2014.europython.eu/site_media/avatars/me_6.jpg</image></speaker></speakers></entry><entry id="18"><category>Talk</category><audience>Novice</audience><topics><topic>Science</topic></topics><start>1430</start><duration>30</duration><room id="5">A08</room><title>Learning Chess from data</title><description>Is watching a chess game enough to figure out the rules?&#13;
What is common denominator between different plays and game ending?&#13;
In this presentation, we will show how Machine Learning and Hadoop &#13;
can help us re-discover chess rules and gain new understanding of the game.</description><speakers><speaker id="302"><name>Niv Mizarhi</name><profile>https://ep2014.europython.eu/en/accounts/profile/302/</profile><description>Team Leader @Taykey&#13;
                       &#13;
holds a B.Sc in Physics from TAU&#13;
&#13;
My mother is a robot &amp; Code is my first language</description><image>https://ep2014.europython.eu/site_media/avatars/561952_102971469866829_419869712_n.jpg</image></speaker><speaker id="304"><name>Tom Ron</name><profile>https://ep2014.europython.eu/en/accounts/profile/304/</profile><description>Love data of all sizes, geek, tech enthusiastic and long distance runner. </description><image></image></speaker></speakers></entry><entry id="24"><category>Talk</category><audience>Advanced</audience><topics><topic>Web</topic></topics><start>1430</start><duration>30</duration><room id="1">C01</room><title>The inner guts of Bitbucket</title><description>Today Bitbucket is more than 30 times bigger than at the time of acquisition almost 4 years ago and serves repositories to over a million developers.&#13;
&#13;
This talk lays out its current architecture in great detail, from Gunicorn and Django to Celery and HA-Proxy to NFS.&#13;
</description><speakers><speaker id="821"><name>Erik van Zijst</name><profile>https://ep2014.europython.eu/en/accounts/profile/821/</profile><description>Erik has been a passionate software professional for 15 years, who considers software to be a craft, not science.&#13;
&#13;
Launching his career in his native Amsterdam in 1999, he served as architect for a financial market data startup from its inception until acquisition. He then co-founded a not so successful Palo-Alto based online real-time video streaming startup. In a deliberate move back to more hands-on coding, Erik joined Atlassian in 2008 and relocated to Sydney, Australia. After having worked on various product teams, he joined the newly formed team to run Bitbucket after its acquisition since 2010.&#13;
&#13;
Currently based out of San Francisco Erik continues to work on Bitbucket.&#13;
</description><image>https://ep2014.europython.eu/site_media/avatars/erik-avatar.jpg</image></speaker></speakers></entry><entry id="71"><category>Talk</category><audience>Advanced</audience><topics><topic>System Administration</topic></topics><start>1500</start><duration>30</duration><room id="1">C01</room><title>Packaging in packaging: dh-virtualenv</title><description>Deploying your software can become a tricky task, regardless of the&#13;
language. In the spirit of the Python conferences, every conference&#13;
needs at least one packaging talk.&#13;
&#13;
This talk is about dh-virtualenv. It's a Python packaging tool aimed&#13;
for Debian-based systems and for deployment flows that already take&#13;
advantage of Debian packaging with Python virtualenvs&#13;
</description><speakers><speaker id="733"><name>Jyrki Pulliainen</name><profile>https://ep2014.europython.eu/en/accounts/profile/733/</profile><description>Jyrki Pulliainen is a Python hacker and open source advocate, who has been working with the snakes for over 7 years.&#13;
&#13;
His background is in web back-ends and nowadays he's a content engineer at Spotify. On the side he also runs PyCon Sweden and helps out with the Stockholm Python user group.&#13;
</description><image>https://ep2014.europython.eu/site_media/avatars/jyrki_2.jpg</image></speaker></speakers></entry><entry id="13"><category>Talk</category><audience>Novice</audience><topics><topic>Science</topic></topics><start>1500</start><duration>30</duration><room id="5">A08</room><title>Non Sequitur: An exploration of Python's random module</title><description>An exploration of Python's random module for the curious programmer, this talk will give a little background in statistics and pseudorandom number generation, explain the properties of python's choice of pseudorandom generator and explore through visualizations the different distributions provided by the module.</description><speakers><speaker id="59"><name>Javier Jair Trejo Garc&#237;a</name><profile>https://ep2014.europython.eu/en/accounts/profile/59/</profile><description>Web project developer, manager and consultant. I have been developing software professionally for the past four years, mostly on the web, but my interest in programming is a life-long affair</description><image>https://ep2014.europython.eu/site_media/avatars/new-profile-pic.jpg</image></speaker></speakers></entry><entry id="8"><category>Talk</category><audience>Novice</audience><topics><topic>Best Practices</topic></topics><start>1500</start><duration>30</duration><room id="4">B09</room><title>The ideal REST API for the AngularJS applications</title><description>This talk will summarize, in a series of easy-to-follow recipes, the best practices of building a comprehensive REST API required to support a relatively big AngularJS application. &#13;
&#13;
We will build API iteratively, while creating our AngularJS app. Along the way, we will look into bottlenecks and pitfalls that await you once you step beyond the trivial "hello world" apps.&#13;
&#13;
The main takeaway of the talk: listeners should obtain enough info to have an *informed* opinion whether AngularJS is easy enough to choose for their next project.</description><speakers><speaker id="41"><name>Victor Farazdagi</name><profile>https://ep2014.europython.eu/en/accounts/profile/41/</profile><description>- Graduate student at Georgia Tech&#13;
- ACM Professional Member</description><image>https://ep2014.europython.eu/site_media/avatars/farazdagi.jpg</image></speaker></speakers></entry><entry id="58"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1500</start><duration>30</duration><room id="2">B05/B06</room><title>Farewell and Welcome Home: Python in Two Genders</title><description>After half a lifetime I transitioned from male to female while staying involved in the Python community. This talk discusses that transition and explores how I found life in Python as a woman different from my former life as a man and the lessons about diversity I have learned.</description><speakers><speaker id="396"><name>Naomi Ceder</name><profile>https://ep2014.europython.eu/en/accounts/profile/396/</profile><description>Naomi Ceder is the author of the Quick Python Book, 2nd Ed. Naomi has has taught Python in schools and in the community for many years, and she was the originator of PyCon North America poster session and Education summit. She is currently Lead Architect for RazorOccam/Zoro Tools Europe.</description><image>https://ep2014.europython.eu/site_media/avatars/Naomi_headshot2.jpg</image></speaker></speakers></entry><entry id="16"><category></category><audience></audience><topics></topics><start>1530</start><duration>30</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Coffee Break</title><description></description><speakers></speakers></entry><entry id="26"><category></category><audience></audience><topics></topics><start>1600</start><duration>90</duration><room id="1">C01</room><title>Lightning Talks</title><description></description><speakers></speakers></entry><entry id="65"><category></category><audience></audience><topics></topics><start>1800</start><duration>120</duration><room>ALL</room><title>Sponsored Event: elasticsearch meetup</title><description></description><speakers></speakers></entry></day><day date="2014-07-25"><entry id="119"><category>Keynote</category><audience>Novice</audience><topics></topics><start>0900</start><duration>45</duration><room id="1">C01</room><title>Python's Role in Big Data Analytics: Past, Present, and Future</title><description>Python has had a long history in Scientific Computing which means it has had the fundamental building blocks necessary for doing Data Analysis for many years. As a result, Python has long played a role in scientific problems with the largest data sets. Lately, it has also grown in traction as a tool for doing rapid Data Analysis. As a result, Python is the center of an emerging trend that is unifying traditional High Performance Computing with "Big Data" applications. In this talk I will discuss the features of Python and its popular libraries that have promoted its use in data analytics. I will also discuss the features that are still missing to enable Python to remain competitive and useful for data scientists and other domain experts. Finally, will describe open source projects that are currently occupying my attention which can assist in keeping Python relevant and even essential in Data Analytics for many years to come.</description><speakers><speaker id="1328"><name>Travis Oliphant</name><profile>https://ep2014.europython.eu/en/accounts/profile/1328/</profile><description>Travis has a Ph.D. from the Mayo Clinic and B.S. and M.S. degrees in Mathematics and Electrical Engineering from Brigham Young University. Since 1997, he has worked extensively with Python for numerical and scientific programming, most notably as the primary developer of the NumPy package, and as a founding contributor of the SciPy package. He is also the author of the definitive "Guide to NumPy".&#13;
&#13;
Travis was an assistant professor of Electrical and Computer Engineering at BYU from 2001-2007, where he taught courses in probability theory, electromagnetics, inverse problems, and signal processing. He also served as Director of the Biomedical Imaging Lab, where he researched satellite remote sensing, MRI, ultrasound, elastography, and scanning impedance imaging.&#13;
&#13;
From 2007-2011, Travis was the President at Enthought, Inc. During his tenure there, the company grew from 15 to 50 employees, and Travis worked with well-known Fortune 50 companies in finance, oil-and-gas, and consumer-products. He was involved in all aspects of the contractual relationship, including consulting, training, code-architecture, and development.&#13;
&#13;
As CEO of Continuum Analytics, Travis engages customers, develops business strategy, and guides technical direction of the company. He actively contributes to software development and engages with the wider open source community in the Python ecosystem.</description><image>https://ep2014.europython.eu/site_media/avatars/travis2.png</image></speaker></speakers></entry><entry id="86"><category>Talk</category><audience>Advanced</audience><topics><topic>Science</topic></topics><start>1000</start><duration>30</duration><room id="4">B09</room><title>Scientific Visualization with GR</title><description>Python developers often get frustrated when managing visualization packages that cover the specific needs in scientific or engineering environments. The [*GR* framework](http://gr-framework.org/) could help. *GR* is a library for visualization applications ranging from publication-quality 2D graphs to the creation of complex 3D scenes and can easily be integrated into existing Python environments or distributions like *Anaconda*.</description><speakers><speaker id="599"><name>Josef Heinen</name><profile>https://ep2014.europython.eu/en/accounts/profile/599/</profile><description>Josef Heinen is the head of the group "Scientific IT-Systems" at the Peter Gr&#252;nberg Institute / J&#252;lich Centre for Neutron Science, both institutes at Forschungszentrum J&#252;lich, a leading research centre in Germany. The design and development of visualization systems have been an essential part of his activities over the last twenty years. He is involved in several Open Source projects. Most recently his team is engaged with the further development of a universal framework for cross-platform visualization applications (GR Framework).</description><image>https://ep2014.europython.eu/site_media/avatars/jh.png</image></speaker></speakers></entry><entry id="66"><category>Talk</category><audience>Novice</audience><topics><topic>Science</topic></topics><start>1000</start><duration>30</duration><room id="1">C01</room><title>Combining the powerful worlds of Python and R</title><description>Although maybe not very well known in the Python community there exists a powerful statistical open-source ecosystem called R. Mostly used in scientific contexts it provides lots of functionality for doing statistical analysis, generation of various kinds of plots and graphs, and much, much more.&#13;
&#13;
The triplet [R](http://www.r-project.org "R"), [Rserve](https://rforge.net/Rserve/ "Rserve"), and [pyRserve](https://pypi.python.org/pypi/pyRserve/ "pyRserve") allows the building up of a network bridge from Python to R: Now R-functions can be called from Python as if they were implemented in Python, and even complete R scripts can be executed through this connection.</description><speakers><speaker id="686"><name>Ralph Heinkel</name><profile>https://ep2014.europython.eu/en/accounts/profile/686/</profile><description>Freelance Python software developer,&#13;
project manager, body therapist</description><image>https://ep2014.europython.eu/site_media/avatars/ralph-no-panic.jpg</image></speaker></speakers></entry><entry id="61"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1000</start><duration>30</duration><room id="5">A08</room><title>Scalable Realtime Architectures in Python</title><description>This talk will focus on you can readily implement highly scalable and fault tolerant realtime architectures, such as dashboards, using Python and tools like Storm, Kafka, and ZooKeeper. We will focus on two related aspects: composing reliable systems using at-least-once and idempotence semantics and how to partition for locality.</description><speakers><speaker id="414"><name>Jim Baker</name><profile>https://ep2014.europython.eu/en/accounts/profile/414/</profile><description>Jim is a committer on Jython, for which he has worked on nearly every aspect from compilation to Unicode, and a co-author of the Definitive Guide to Jython. Jim is a senior software developer at Rackspace, where he works at the intersection of big data and cloud computing. He is also a lecturer in computer science at the University of Colorado at Boulder, where he teaches Principles of Programming Languages. He is a graduate of Harvard College and Brown University and is a nominated member of the Python Software Foundation.</description><image></image></speaker></speakers></entry><entry id="106"><category>Talk</category><audience>Advanced</audience><topics><topic>Best Practices</topic></topics><start>1000</start><duration>30</duration><room id="2">B05/B06</room><title>Generators, or how to step to infinity and beyond</title><description>Generators are a great weapon in every programmer toolkit, they allow you to write elegant code even when working on infinite streams of data.&#13;
&#13;
In this talk I'm going to show the differences between iterators, iterables, generators, coroutines, how to define them and give many real world examples.</description><speakers><speaker id="251"><name>Andrea Crotti</name><profile>https://ep2014.europython.eu/en/accounts/profile/251/</profile><description>I'm currently working as Python/Django developer in London after other Python experiences in the aerospace and hardware industries.&#13;
&#13;
I started to use Python 7 years ago and it still does not stop to amaze me how much I can get done with so little elegant code.&#13;
&#13;
I've been attending Python conferences in the last few years and enjoyed giving talks about various topics, from decorators to TDD.</description><image>https://ep2014.europython.eu/site_media/avatars/andrea_face_1.jpg</image></speaker></speakers></entry><entry id="85"><category>Training</category><audience>Advanced</audience><topics></topics><start>1000</start><duration>180</duration><room id="6">A03/A04</room><title>Interactive experiments in sound synthesis with Nsound, numpy and matplotlib</title><description>After a brief introduction to the theoretical foundations, the training is divided in several practice sections, each approx. 15-20 min. long. In these, a short demonstration of the programming tools for the topic is followed by examples and hands-on excercises for the participants to implement.&#13;
&#13;
1. A very short introduction to the basic principles of sound sampling, digital signals and sound synthesis (30 min. lecture)&#13;
&#13;
2. Exploring the programming environment (20 min., participants follow trainer)&#13;
   &#13;
    (Running IPython/pylab, verifying the matplotlib, Nsound and audio setup with  provided example scripts, first experiments)&#13;
&#13;
3. Generating and plotting waveforms (15 min. with excercises)&#13;
&#13;
4. Combining signals and generating complex sound files (15 min. with excercises)&#13;
&#13;
5. Plotting frequency spectrum diagrams and analyzing harmonic content (10. min)&#13;
&#13;
6. Modulating sound with envelopes and LFOs (20 min. with excercises)&#13;
  &#13;
7. Filtering audio by using and combining different filter types&#13;
  (20 min. with excercises)&#13;
&#13;
8. Putting the pieces together: building a processing chain for subtractive synthesis (20 min., participants follow trainer)&#13;
  &#13;
9. Participants work in groups on one of the following projects (30. min):&#13;
&#13;
    * Generating Sci-Fi sound effects&#13;
    * Implementing delays and modulation effects&#13;
    * Sequencing sound clips&#13;
&#13;
    For each project a handout with goals, hints and helpful code fragments is  provided.&#13;
&#13;
A coffee break is planned for after item 5.</description><speakers><speaker id="419"><name>Christopher Arndt</name><profile>https://ep2014.europython.eu/en/accounts/profile/419/</profile><description>Freelancing Python developer, trainer and Open Source consultant based in Cologne, Germany.&#13;
&#13;
Has worked with Python for over 15 years and was involved with setting up the Python User Group Cologne, pyCologne, in 2006 and has been an active member of the German Python community ever since. &#13;
&#13;
He plays the guitar and keyboards as a hobby and devotes much of his spare time to synthesizers, sound design and all things related to music production.</description><image>https://ep2014.europython.eu/site_media/avatars/chrisarndt_2014_gross.jpg</image></speaker></speakers></entry><entry id="92"><category>Training</category><audience>Advanced</audience><topics></topics><start>1000</start><duration>180</duration><room id="7">A05/A06</room><title>Improving your automated testing with pytest</title><description>-  (30 minutes) pytest feature walkthrough: automatic test discovery, assert statement, modular parametrizable fixtures, 50 plugins&#13;
&#13;
 -  (60 minutes) pytest fixture mechanism: dependency injection, declaring and using function/module/session scoped fixtures, using fixtures from fixture functions, parametrizing fixtures. Exercises.&#13;
&#13;
 -    (30 minutes): running nose/unittest/trial suites with pytest. Discussing advantages and limitations. Exercise with select existing real-life open source projects.&#13;
&#13;
 -     (30 minutes): Strategies for a) migrating to pytest b) using "autouse" fixtures in conjunction with XUnit-based setup/tearodwn methods. Exercise.&#13;
&#13;
- (30 minutes): open space for questions and interactively solving pytest/unittest integration problems on real-life problems as time permits. &#13;
&#13;
This is a hands-on course with lots of student activities. Bring your laptop with pytest pre-installed. The presentation parts are usually short and include real-life examples. Students will create or use own tests or real-life projects from the very beginning. Exercises are an important part of the training. Students are encouraged to bring their own problems to be discussed at the end of the course and, if there is interest, during the conference in an additional open space.  </description><speakers><speaker id="275"><name>Holger Krekel</name><profile>https://ep2014.europython.eu/en/accounts/profile/275/</profile><description>Founder of PyPy, main author  of pytest, tox, devpi and execnet projects.  Trainer and conference speaker. Likes playing Go, listening to DnB and Electro Swing and caring for his son. </description><image></image></speaker></speakers></entry><entry id="5"><category></category><audience></audience><topics></topics><start>1030</start><duration>30</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Breakfast</title><description></description><speakers></speakers></entry><entry id="42"><category>Talk</category><audience>Advanced</audience><topics><topic>Science</topic></topics><start>1100</start><duration>30</duration><room id="3">B07/B08</room><title>Event discrete simulation with SimPy</title><description>Often, experiments with real world systems are high-risk, accompanied by high&#13;
costs or not even possible at all. That&#8217;s when simulations come into play.&#13;
This talk will give a brief introduction into the topic of simulation. By means&#13;
of simple examples, it will demonstrate how you can use SimPy to implement&#13;
event-discrete simulations and which features SimPy offers to help you doing&#13;
that.</description><speakers><speaker id="368"><name>Stefan Scherfke</name><profile>https://ep2014.europython.eu/en/accounts/profile/368/</profile><description>I&#8217;m a scientific assistant and passionate Python programmer at [OFFIS](http://www.offis.de/) in Oldenburg, Germany.&#8194;My current work centers around Smart Grid simulation and the development of [mosaik](https://mosaik.offis.de/), a co-simulation library for smart energy systems.&#13;
&#13;
My programming career started with HTML and PHP.&#8194;In 2000, I created Halo Orbit, which became&#8201;&#8212;&#8201;by a lot of work and passion&#8201;&#8212;&#8201;the biggest German-speaking Halo fansite at that time.&#13;
&#13;
I studied computer science with a focus on ecoinformatics and graduated with a diploma (the German equivalent to a master&#8217;s degree).&#8194;During my studies, I learned Java, improved my PHP skills, tried C&#8201;/&#8201;C++, and in 2008 ultimately found Python, which I instantly fell in love with.&#13;
&#13;
Since my days as a web programmer, I&#8217;ve been working with Linux servers and desktops.&#8194;I mainly work on a Mac, though.</description><image>https://ep2014.europython.eu/site_media/avatars/ssc1.jpg</image></speaker></speakers></entry><entry id="28"><category>Talk</category><audience>Advanced</audience><topics><topic>Best Practices</topic></topics><start>1100</start><duration>30</duration><room id="2">B05/B06</room><title>Everything You Always Wanted to Know About Memory in Python But Were Afraid to Ask</title><description>Have you ever wondered what happens to all the precious RAM after running your 'simple' CPython code? &#13;
Prepare yourself for a short introduction to CPython memory management!&#13;
This presentation will try to answer some memory related questions you always wondered about. It will also discuss basic memory profiling tools and techniques.</description><speakers><speaker id="292"><name>Piotr Przymus</name><profile>https://ep2014.europython.eu/en/accounts/profile/292/</profile><description>Ph.D. Student of Computer Science in the Faculty of Mathematics and Computer Science at Nicolaus Copernicus University, Torun, Poland. His main scientific interests are: database systems, GPGPU computing and data mining. Ardent supporter of Python.</description><image>https://ep2014.europython.eu/site_media/avatars/IMG_0360-002.JPG</image></speaker></speakers></entry><entry id="45"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1100</start><duration>30</duration><room id="1">C01</room><title>Out-of-Core Columnar Datasets</title><description>Tables are a very handy data structure to store&#13;
datasets to perform data analysis (filters, groupings, sortings,&#13;
alignments...).&#13;
&#13;
But it turns out that *how the tables are actually implemented* makes a large impact on how they perform.&#13;
&#13;
Learn what you can expect from the current tabular offerings in the Python ecosystem.</description><speakers><speaker id="695"><name>Francesc Alted</name><profile>https://ep2014.europython.eu/en/accounts/profile/695/</profile><description>Francesc Alted is a Python and C hacker.  He works as a freelancer helping others to squeeze the last drop of performance out of systems. He also loves doing training on performance Python.&#13;
&#13;
Creator of PyTables, Blosc, BLZ and developer of numexpr and Blaze.&#13;
&#13;
He also enjoys good movies.</description><image>https://ep2014.europython.eu/site_media/avatars/foto-meua.png</image></speaker></speakers></entry><entry id="29"><category>Talk</category><audience>Advanced</audience><topics><topic>Science</topic></topics><start>1100</start><duration>30</duration><room id="5">A08</room><title>Big Data Analytics with Python using Stratosphere</title><description>[Stratosphere](http://stratosphere.eu/) is a distributed platform for advanced big data analytics. It features a rich set of operators, advanced, iterative data flows, an efficient runtime, and automatic program optimization. We present Stratophere's new Python programming interface. It allows Python developers to easily get their hands on Big Data.</description><speakers><speaker id="190"><name>Robert Metzger</name><profile>https://ep2014.europython.eu/en/accounts/profile/190/</profile><description>Core developer at stratosphere.eu</description><image></image></speaker></speakers></entry><entry id="63"><category>Talk</category><audience>Novice</audience><topics><topic>Web</topic></topics><start>1130</start><duration>30</duration><room id="4">B09</room><title>Building Realtime Web Applications with WebRTC and Python</title><description>WebRTC makes building peer to peer real time web applications easier. First, we'll discuss in short what WebRTC is, how it works. Then we will explore ways to build the signalling system of a WebRTC app using Python.     </description><speakers><speaker id="31"><name>Tarashish Mishra</name><profile>https://ep2014.europython.eu/en/accounts/profile/31/</profile><description>Tarashish Mishra is a web developer in making based in Bhubaneswar, India. He is studying computer science as an undergraduate student. He loves making web application and scraping web pages with Python. He tinkers with arduino and helps people learn to code in free time. </description><image>https://ep2014.europython.eu/site_media/avatars/pic.jpg</image></speaker><speaker id="400"><name>Rishabh Raj</name><profile>https://ep2014.europython.eu/en/accounts/profile/400/</profile><description></description><image>https://ep2014.europython.eu/site_media/avatars/propic.jpg</image></speaker></speakers></entry><entry id="9"><category>Talk</category><audience>Advanced</audience><topics><topic>Python Core</topic></topics><start>1130</start><duration>30</duration><room id="2">B05/B06</room><title>Fun with cPython memory allocator</title><description>This talk describes some of the lesser known properties of cPython memory allocator and some ways to debug memory-related problems, all this based on real events.</description><speakers><speaker id="471"><name>Tomasz Paczkowski</name><profile>https://ep2014.europython.eu/en/accounts/profile/471/</profile><description></description><image></image></speaker></speakers></entry><entry id="54"><category>Talk</category><audience>Advanced</audience><topics><topic>Science</topic></topics><start>1130</start><duration>30</duration><room id="3">B07/B08</room><title>Ganga: an interface to the LHC computing grid</title><description>Ganga is a tool, designed and used by the large particle physics experiments at CERN. Written in pure Python, it delivers a clean, usable interface to allow thousands of physicists to interact with the huge computing resources available to them.</description><speakers><speaker id="693"><name>Matt Williams</name><profile>https://ep2014.europython.eu/en/accounts/profile/693/</profile><description></description><image></image></speaker></speakers></entry><entry id="62"><category>Talk</category><audience>Advanced</audience><topics><topic>Science</topic></topics><start>1130</start><duration>30</duration><room id="5">A08</room><title>Extending Scikit-Learn with your own Regressor</title><description>We show how to write your own robust linear estimator within the Scikit-Learn framework using as an example the Theil-Sen estimator known as "the most popular nonparametric technique for estimating a linear trend".</description><speakers><speaker id="375"><name>Florian Wilhelm</name><profile>https://ep2014.europython.eu/en/accounts/profile/375/</profile><description>Data Scientist with a mathematical background. PhD from the Karlsruher Institute of Technology in Applied Mathematics. &#13;
Focus on mathematical modelling and machine learning as well as business analytics. Years of experience in several customer projects at Blue Yonder.</description><image>https://ep2014.europython.eu/site_media/avatars/Foto_400dpi.jpg</image></speaker></speakers></entry><entry id="104"><category>Talk</category><audience>Advanced</audience><topics><topic>Python Core</topic></topics><start>1130</start><duration>30</duration><room id="1">C01</room><title>Advanced Database Programming with Python</title><description>The Python DB-API 2.0 provides a direct interface to&#13;
many popular database backends. It makes interaction with&#13;
relational database very straight forward and allows tapping&#13;
into the full set of features these databases provide.&#13;
&#13;
The talk will cover advanced database topics which are&#13;
relevant in production environments such as locks, distributed&#13;
transactions and transaction isolation.</description><speakers><speaker id="135"><name>Marc-Andr&#233; Lemburg</name><profile>https://ep2014.europython.eu/en/accounts/profile/135/</profile><description>Marc-Andre is the CEO and founder of eGenix.com, a Python-focused project and consulting company based in Germany. He has a degree in mathematics from the University of D&#252;sseldorf. His work with and for Python started in Winter 1993. In 1997, he became a Python Core Developer. He designed and implemented the Unicode support in Python and continued to maintain the Python Unicode implementation for more than a decade, after it first appeared in Python 1.6 in 2000.&#13;
&#13;
Marc-Andre is a founding member of the Python Software Foundation (PSF) and has served on the PSF Board several times. He is also board member of the EuroPython Society (EPS) which organizes the EuroPython conference series and the author of the well-known mx Extensions, e.g. mxTextTools, mxDateTime and mxODBC, which are now distributed and maintained through eGenix.com.&#13;
&#13;
Today Marc-Andre spends most of his time managing large-scale customer projects heavily relying on Python and databases.</description><image>https://ep2014.europython.eu/site_media/avatars/mal-business-2-446x446.png</image></speaker></speakers></entry><entry id="105"><category>Talk</category><audience>Advanced</audience><topics><topic>Science</topic></topics><start>1200</start><duration>30</duration><room id="1">C01</room><title>Data Matching and Big Data Deduping in Python</title><description>Till now, using real-world-data is difficult. Apart from encoding and missing value, multiple records which mean the same thing is one of the biggest headache. This talk will demonstrate two tools &#8220;Dedupe\*&#8221; and &#8220;Dedoop\**&#8221; to handle task of Data Matching and Deduplication in Python  at the scale of millions and billions of records respectively.</description><speakers><speaker id="207"><name>Nikit Saraf</name><profile>https://ep2014.europython.eu/en/accounts/profile/207/</profile><description>I am Computer Science Undergraduate and Machine Learning enthusiast. I just love lots and lots of data. I have worked and contributed to the open source project dedupe https://github.com/open-city/dedupe when I was selected for Google Summer of Code 2013. I worked for "Code for America" organization. The project involved developing data matching tools in python using machine learning algorithms. I have also published a paper in LNCS in the field of Natural Language Processing (again data). I have also attended PyData London this year. Since last year I have regularly been organizing local Scientific Python Meetup on weekends in my college. We hack on projects and work with libraries not limited to scikit-learn, pandas, nltk, scipy. I am very enthusiastic about Python in education.</description><image>https://ep2014.europython.eu/site_media/avatars/Screen_Shot_2014-03-06_at_5.39.03_am.png</image></speaker></speakers></entry><entry id="65"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1200</start><duration>30</duration><room id="3">B07/B08</room><title>Concurrent programming with Python and my little experiment</title><description>Concurrent programming in Python may be hard. A lot of solutions exists&#13;
though. Most of them are based on an eventloop. This talk will present&#13;
what I discovered and tested along the time and my little&#13;
[experiment](http://github.com/benoitc/offset) in porting the Go&#13;
concurrency model in Python.&#13;
</description><speakers><speaker id="755"><name>Benoit Chesneau</name><profile>https://ep2014.europython.eu/en/accounts/profile/755/</profile><description>Beno&#238;t Chesneau is a French web craftsman, living near Paris. He has years of experience in building small and big-scale database backend website. He founded Enki Multimedia a company building innovative web services and open-source applications. Beno&#238;t Chesneau is a PSF member, Apache CouchDB committer and Gunicorn author.</description><image>https://ep2014.europython.eu/site_media/avatars/13_-_1.jpg</image></speaker></speakers></entry><entry id="107"><category>Talk</category><audience>Advanced</audience><topics><topic>Other</topic></topics><start>1200</start><duration>30</duration><room id="4">B09</room><title>Using asyncio (aka Tulip) for home automation</title><description>Python has a variety of options for creating concurrent applications. This talk will explore the usage of asyncio for this purpose while looking at a number of devices that can be used in home automation for monitoring your electricity usage, room temperatures and controlling remote devices.</description><speakers><speaker id="131"><name>Dougal Matthews</name><profile>https://ep2014.europython.eu/en/accounts/profile/131/</profile><description>Dougal Matthews is a Scottish Pythonista and skiier living in Glasgow. He runs the local Python user group. During the day, Dougal hacks on OpenStack as a senior developer at Red Hat.</description><image>https://ep2014.europython.eu/site_media/avatars/P1050828-400px.JPG</image></speaker></speakers></entry><entry id="50"><category>Talk</category><audience>Advanced</audience><topics><topic>Python Core</topic></topics><start>1200</start><duration>30</duration><room id="2">B05/B06</room><title>Post-Mortem Debugging with Heap-Dumps</title><description>UNIX core-dumps, Windows minidumps or Java heap-dumps are well established technologies for post-mortem defect analysis.&#13;
I'll present a similar technology for Python. An improved pickling mechanism makes it possible to serialise the state of a Python &#13;
program for subsequent analysis with a conventional Python-debugger.</description><speakers><speaker id="252"><name>Anselm Kruis</name><profile>https://ep2014.europython.eu/en/accounts/profile/252/</profile><description>Anselm Kruis works as a Senior Solution Architect for science + computing ag, a Bull subsidiary. He started software development 25 years ago and enjoys the simplicity of Python since over 10 years, mostly using Jython and nowadays Stackless Python. If allowed by professional constraints, he is happy to utilise and contribute to open software projects.</description><image>https://ep2014.europython.eu/site_media/avatars/kruis-gr.jpg</image></speaker></speakers></entry><entry id="108"><category>Talk</category><audience>Advanced</audience><topics><topic>Science</topic></topics><start>1200</start><duration>30</duration><room id="5">A08</room><title>Bubbles &#8211; Data Processing with Dynamic Dispatch</title><description>Bubbles is a framework for data processing &#8211; letting them live in their most native environment. The developers of data processing pipelines can focus on their data task and they should not care too much about the underlying data implementation.&#13;
&#13;
The Bubbles is based on metadata and relies on dynamic dispatch to perform the most appropriate operation as possible. </description><speakers><speaker id="39"><name>Stefan Urbanek</name><profile>https://ep2014.europython.eu/en/accounts/profile/39/</profile><description>Data warehouse architect. Brewing data at the Data Brewery.</description><image></image></speaker></speakers></entry><entry id="10"><category></category><audience></audience><topics></topics><start>1230</start><duration>90</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Lunch</title><description></description><speakers></speakers></entry><entry id="115"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1400</start><duration>30</duration><room id="5">A08</room><title>EuroPython Society General Assembly</title><description>The EuroPython Society (EPS) will have its annual Generally Assembly at EuroPython 2014.&#13;
&#13;
The general assembly is open to all EPS members and EuroPython attendees. During the session, we will report on our work, the EPS finances, vote on a new board and any other motions announced in the invitation to the general assembly.&#13;
&#13;
Please see the EPS bylaws for details.</description><speakers><speaker id="135"><name>Marc-Andr&#233; Lemburg</name><profile>https://ep2014.europython.eu/en/accounts/profile/135/</profile><description>Marc-Andre is the CEO and founder of eGenix.com, a Python-focused project and consulting company based in Germany. He has a degree in mathematics from the University of D&#252;sseldorf. His work with and for Python started in Winter 1993. In 1997, he became a Python Core Developer. He designed and implemented the Unicode support in Python and continued to maintain the Python Unicode implementation for more than a decade, after it first appeared in Python 1.6 in 2000.&#13;
&#13;
Marc-Andre is a founding member of the Python Software Foundation (PSF) and has served on the PSF Board several times. He is also board member of the EuroPython Society (EPS) which organizes the EuroPython conference series and the author of the well-known mx Extensions, e.g. mxTextTools, mxDateTime and mxODBC, which are now distributed and maintained through eGenix.com.&#13;
&#13;
Today Marc-Andre spends most of his time managing large-scale customer projects heavily relying on Python and databases.</description><image>https://ep2014.europython.eu/site_media/avatars/mal-business-2-446x446.png</image></speaker></speakers></entry><entry id="27"><category></category><audience></audience><topics></topics><start>1400</start><duration>30</duration><room id="1">C01</room><title>Sprint Orientation</title><description></description><speakers></speakers></entry><entry id="116"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1430</start><duration>30</duration><room id="5">A08</room><title>Presenting the EuroPython Society (EPS)</title><description>The EuroPython Society (EPS) holds the IP rights to the EuroPython conference series and manages the organization of the EuroPython conference events.&#13;
&#13;
The EPS board would like to provide more insight into the work done by the EPS, invite attendees to become members of the EPS and would like to reach out to anyone who would like to help with our mission.</description><speakers><speaker id="135"><name>Marc-Andr&#233; Lemburg</name><profile>https://ep2014.europython.eu/en/accounts/profile/135/</profile><description>Marc-Andre is the CEO and founder of eGenix.com, a Python-focused project and consulting company based in Germany. He has a degree in mathematics from the University of D&#252;sseldorf. His work with and for Python started in Winter 1993. In 1997, he became a Python Core Developer. He designed and implemented the Unicode support in Python and continued to maintain the Python Unicode implementation for more than a decade, after it first appeared in Python 1.6 in 2000.&#13;
&#13;
Marc-Andre is a founding member of the Python Software Foundation (PSF) and has served on the PSF Board several times. He is also board member of the EuroPython Society (EPS) which organizes the EuroPython conference series and the author of the well-known mx Extensions, e.g. mxTextTools, mxDateTime and mxODBC, which are now distributed and maintained through eGenix.com.&#13;
&#13;
Today Marc-Andre spends most of his time managing large-scale customer projects heavily relying on Python and databases.</description><image>https://ep2014.europython.eu/site_media/avatars/mal-business-2-446x446.png</image></speaker></speakers></entry><entry id="28"><category></category><audience></audience><topics></topics><start>1430</start><duration>60</duration><room id="1">C01</room><title>Lightning Talks</title><description></description><speakers></speakers></entry><entry id="117"><category>Talk</category><audience>Novice</audience><topics><topic>Other</topic></topics><start>1500</start><duration>30</duration><room id="5">A08</room><title>EuroPython 2015 - Let's build it together</title><description>The EuroPython Society has announced that it will change the organizational setup for the upcoming 2015 conference to a model based on distributed work groups rather than having a local organizer manage the whole event.&#13;
&#13;
We would like to invite everyone who's interested in making EuroPython 2015 happen to this session.</description><speakers><speaker id="135"><name>Marc-Andr&#233; Lemburg</name><profile>https://ep2014.europython.eu/en/accounts/profile/135/</profile><description>Marc-Andre is the CEO and founder of eGenix.com, a Python-focused project and consulting company based in Germany. He has a degree in mathematics from the University of D&#252;sseldorf. His work with and for Python started in Winter 1993. In 1997, he became a Python Core Developer. He designed and implemented the Unicode support in Python and continued to maintain the Python Unicode implementation for more than a decade, after it first appeared in Python 1.6 in 2000.&#13;
&#13;
Marc-Andre is a founding member of the Python Software Foundation (PSF) and has served on the PSF Board several times. He is also board member of the EuroPython Society (EPS) which organizes the EuroPython conference series and the author of the well-known mx Extensions, e.g. mxTextTools, mxDateTime and mxODBC, which are now distributed and maintained through eGenix.com.&#13;
&#13;
Today Marc-Andre spends most of his time managing large-scale customer projects heavily relying on Python and databases.</description><image>https://ep2014.europython.eu/site_media/avatars/mal-business-2-446x446.png</image></speaker></speakers></entry><entry id="17"><category></category><audience></audience><topics></topics><start>1530</start><duration>30</duration><room>C01, B05/B06, B07/B08, B09, A08</room><title>Coffee Break</title><description></description><speakers></speakers></entry><entry id="29"><category></category><audience></audience><topics></topics><start>1600</start><duration>30</duration><room id="1">C01</room><title>Conference Closing</title><description></description><speakers></speakers></entry><entry id="30"><category></category><audience></audience><topics></topics><start>1630</start><duration>30</duration><room id="5">A08</room><title>PySV AGM</title><description>Annual General Meeting of the Python Software Verband e.V.</description><speakers></speakers></entry></day><day date="2014-07-26"><entry id="18"><category></category><audience></audience><topics></topics><start>0900</start><duration>90</duration><room id="5">A08</room><title>BarCamp</title><description></description><speakers></speakers></entry><entry id="20"><category></category><audience></audience><topics></topics><start>0900</start><duration>90</duration><room>A03/A04, A05/A06</room><title>Sprints</title><description></description><speakers></speakers></entry><entry id="38"><category></category><audience></audience><topics></topics><start>0900</start><duration>510</duration><room>B05/B06, B07/B08, B09</room><title>Satellite Event: PyData</title><description>PyData 2014 Berlin is a satellite event along the EuroPython 2014. Although PyData shares the same venue, EuroPython 2014 tickets do not include access to PyData.&#13;
&#13;
[PyData Schedule](http://pydata.org/berlin2014/schedule/)</description><speakers></speakers></entry><entry id="52"><category></category><audience></audience><topics></topics><start>1030</start><duration>30</duration><room>A08, A03/A04, A05/A06</room><title>Breakfast</title><description></description><speakers></speakers></entry><entry id="21"><category></category><audience></audience><topics></topics><start>1100</start><duration>90</duration><room>A03/A04, A05/A06</room><title>Sprints</title><description></description><speakers></speakers></entry><entry id="19"><category></category><audience></audience><topics></topics><start>1100</start><duration>90</duration><room id="5">A08</room><title>BarCamp</title><description></description><speakers></speakers></entry><entry id="54"><category></category><audience></audience><topics></topics><start>1230</start><duration>90</duration><room>A08, A03/A04, A05/A06</room><title>Lunch</title><description></description><speakers></speakers></entry><entry id="22"><category></category><audience></audience><topics></topics><start>1400</start><duration>90</duration><room>A03/A04, A05/A06</room><title>Sprints</title><description></description><speakers></speakers></entry><entry id="46"><category></category><audience></audience><topics></topics><start>1400</start><duration>90</duration><room id="5">A08</room><title>BarCamp</title><description></description><speakers></speakers></entry><entry id="56"><category></category><audience></audience><topics></topics><start>1530</start><duration>30</duration><room>A08, A03/A04, A05/A06</room><title>Coffee Break</title><description></description><speakers></speakers></entry><entry id="47"><category></category><audience></audience><topics></topics><start>1600</start><duration>90</duration><room id="5">A08</room><title>BarCamp</title><description></description><speakers></speakers></entry><entry id="23"><category></category><audience></audience><topics></topics><start>1600</start><duration>90</duration><room>A03/A04, A05/A06</room><title>Sprints</title><description></description><speakers></speakers></entry></day><day date="2014-07-27"><entry id="48"><category></category><audience></audience><topics></topics><start>0900</start><duration>90</duration><room id="5">A08</room><title>BarCamp</title><description></description><speakers></speakers></entry><entry id="58"><category></category><audience></audience><topics></topics><start>0900</start><duration>90</duration><room>A03/A04, A05/A06</room><title>Sprints</title><description></description><speakers></speakers></entry><entry id="42"><category></category><audience></audience><topics></topics><start>0900</start><duration>510</duration><room>B05/B06, B07/B08, B09</room><title>Satellite Event: PyData</title><description>PyData 2014 Berlin is a satellite event along the EuroPython 2014. Although PyData shares the same venue, EuroPython 2014 tickets do not include access to PyData.&#13;
&#13;
[PyData Schedule](http://pydata.org/berlin2014/schedule/)</description><speakers></speakers></entry><entry id="53"><category></category><audience></audience><topics></topics><start>1030</start><duration>30</duration><room>A08, A03/A04, A05/A06</room><title>Breakfast</title><description></description><speakers></speakers></entry><entry id="59"><category></category><audience></audience><topics></topics><start>1100</start><duration>90</duration><room>A03/A04, A05/A06</room><title>Sprints</title><description></description><speakers></speakers></entry><entry id="49"><category></category><audience></audience><topics></topics><start>1100</start><duration>90</duration><room id="5">A08</room><title>BarCamp</title><description></description><speakers></speakers></entry><entry id="55"><category></category><audience></audience><topics></topics><start>1230</start><duration>90</duration><room>A08, A03/A04, A05/A06</room><title>Lunch</title><description></description><speakers></speakers></entry><entry id="50"><category></category><audience></audience><topics></topics><start>1400</start><duration>90</duration><room id="5">A08</room><title>BarCamp</title><description></description><speakers></speakers></entry><entry id="60"><category></category><audience></audience><topics></topics><start>1400</start><duration>90</duration><room>A03/A04, A05/A06</room><title>Sprints</title><description></description><speakers></speakers></entry><entry id="57"><category></category><audience></audience><topics></topics><start>1530</start><duration>30</duration><room>A08, A03/A04, A05/A06</room><title>Coffee Break</title><description></description><speakers></speakers></entry><entry id="61"><category></category><audience></audience><topics></topics><start>1600</start><duration>90</duration><room>A03/A04, A05/A06</room><title>Sprints</title><description></description><speakers></speakers></entry><entry id="51"><category></category><audience></audience><topics></topics><start>1600</start><duration>90</duration><room id="5">A08</room><title>BarCamp</title><description></description><speakers></speakers></entry></day></schedule>
